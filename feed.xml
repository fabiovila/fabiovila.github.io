<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" /><updated>2025-03-16T10:40:44-05:00</updated><id>http://0.0.0.0:4000/feed.xml</id><title type="html">Your awesome title</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Receptor FM de conversão direta - RF</title><link href="http://0.0.0.0:4000/eletr%C3%B4nica/2025/03/16/radio-conversao-direta-fm.html" rel="alternate" type="text/html" title="Receptor FM de conversão direta - RF" /><published>2025-03-16T00:00:00-05:00</published><updated>2025-03-16T00:00:00-05:00</updated><id>http://0.0.0.0:4000/eletr%C3%B4nica/2025/03/16/radio-conversao-direta-fm</id><content type="html" xml:base="http://0.0.0.0:4000/eletr%C3%B4nica/2025/03/16/radio-conversao-direta-fm.html">&lt;h2 id=&quot;receptor-de-conversão-direta&quot;&gt;Receptor de Conversão Direta&lt;/h2&gt;

&lt;p&gt;Os receptores de conversão direta diferem dos super-heteródinos por operarem com um oscilador sintonizado exatamente na mesma frequência do sinal que se deseja receber, convertendo-o diretamente para a faixa de áudio. Nos receptores super-heteródinos, a frequência do oscilador local é deslocada em relação à frequência de sintonia, gerando uma Frequência Intermediária (FI) após o processo de mistura. A FI passa por diversos estágios de amplificação e filtragem antes da demodulação final do sinal de áudio.&lt;/p&gt;

&lt;p&gt;Nos receptores de conversão direta, por outro lado, o oscilador opera exatamente na frequência do sinal de entrada. Quando este é combinado no mixer de radiofrequência, a frequência portadora é suprimida e restam apenas os componentes de áudio modulados, que são extraídos diretamente. Esse tipo de arquitetura simplifica o circuito e reduz a necessidade de filtros complexos, embora seja mais sensível a interferências e ruídos.&lt;/p&gt;

&lt;h2 id=&quot;esquema-do-circuito&quot;&gt;Esquema do Circuito&lt;/h2&gt;

&lt;p&gt;Durante minhas experiências com receptores experimentais, este foi um dos melhores circuitos que testei para a banda de FM. Ele é uma adaptação para o transistor NPN BF199, baseada no circuito original encontrado no site &lt;a href=&quot;https://www.qsl.net/va3iul/&quot;&gt;VA3IUL&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;O circuito é composto pelos seguintes blocos principais:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Oscilador Local (Q2 e Q3)&lt;/strong&gt;: A configuração desse oscilador é particularmente interessante, garantindo a estabilidade necessária para uma boa conversão do sinal.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Amplificador e Misturador (Q1)&lt;/strong&gt;: O transistor Q1 amplifica o sinal de RF recebido pela antena e realiza a mistura com a frequência do oscilador, gerando o sinal de áudio na saída.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Bobinas&lt;/strong&gt;: Podem ser enroladas manualmente em um lápis, ajustadas para otimizar a recepção na faixa desejada.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Potenciômetro de Ajuste&lt;/strong&gt;: Deve ser calibrado até que se atinja o ponto ideal de mistura, garantindo a melhor qualidade do sinal de áudio.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;O esquema abaixo ilustra o funcionamento do circuito:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/imgs/receptor-conversao-direta-fm.png&quot; alt=&quot;Esquema do receptor de FM com conversão direta&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;oscilador&quot;&gt;Oscilador&lt;/h2&gt;

&lt;p&gt;O oscilador se parece muito com a configuração flip-flop a transistor adicionado de realimentação através de L2 e C5. Quando o circuito é ligado somente Q3 conduz devido a polarização de sua base com a corrente proveniente de RV1 e R6 e uma pequena fração do sinal de RF através de Q1. L2 e C3 começam a entrar em ressonância com tensão muito baixa inicialmente. A corrente de oscilação de L2 e Q3 começa a subir elevando cada vez mais a amplificação de Q3.&lt;/p&gt;

&lt;p&gt;Os receptores de conversão direta são uma excelente opção para quem deseja um design mais simples e eficiente para recepção de sinais de AM, CW e SSB. Apesar de suas limitações em relação à rejeição de sinais espúrios e ao isolamento de interferências, eles continuam sendo uma alternativa viável para aplicações de radioamadorismo e experimentação eletrônica.&lt;/p&gt;

&lt;p&gt;Este circuito, em particular, mostrou-se robusto e eficiente nos testes, sendo um excelente ponto de partida para quem deseja explorar mais sobre a técnica de conversão direta na recepção de sinais de RF.&lt;/p&gt;</content><author><name></name></author><category term="eletrônica" /><category term="eletrônica" /><category term="receptor" /><category term="rf" /><summary type="html">Receptor de Conversão Direta</summary></entry><entry><title type="html">Sobre tohost e fromhost - RISCV</title><link href="http://0.0.0.0:4000/programa%C3%A7%C3%A3o/2025/01/11/sobre-tohost-fromhost.html" rel="alternate" type="text/html" title="Sobre tohost e fromhost - RISCV" /><published>2025-01-11T00:00:00-06:00</published><updated>2025-01-11T00:00:00-06:00</updated><id>http://0.0.0.0:4000/programa%C3%A7%C3%A3o/2025/01/11/sobre-tohost-fromhost</id><content type="html" xml:base="http://0.0.0.0:4000/programa%C3%A7%C3%A3o/2025/01/11/sobre-tohost-fromhost.html">&lt;h3 id=&quot;resumo-e-explicação-da-funcionalidade-de-tohost-e-fromhost-no-spike-e-em-ambientes-risc-v&quot;&gt;Resumo e Explicação da Funcionalidade de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tohost&lt;/code&gt; e &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fromhost&lt;/code&gt; no Spike e em Ambientes RISC-V&lt;/h3&gt;

&lt;p&gt;A comunicação entre o simulador Spike e o programa em execução é realizada por meio de dois registradores especiais: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tohost&lt;/code&gt; e &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fromhost&lt;/code&gt;. Esses registradores não fazem parte de um padrão oficial do RISC-V, mas são uma convenção adotada pela equipe da UC Berkeley para permitir a interação entre o host (sistema que executa o simulador) e o target (código RISC-V em execução no simulador).&lt;/p&gt;

&lt;h4 id=&quot;definição-e-função&quot;&gt;Definição e Função&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tohost&lt;/code&gt;&lt;/strong&gt;: Este registrador é utilizado para enviar comandos e dados do target para o host. A escrita de valores específicos em &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tohost&lt;/code&gt; pode disparar a realização de uma chamada de sistema (syscall) ou a terminação do programa em execução.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Se o bit menos significativo (LSB) for 0, os bits superiores representam um ponteiro para uma estrutura que descreve a chamada de sistema.&lt;/li&gt;
      &lt;li&gt;Se o LSB for 1, os bits superiores contêm o código de saída do programa, onde o valor 0 indica sucesso e qualquer outro valor indica falha.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fromhost&lt;/code&gt;&lt;/strong&gt;: Este registrador é usado pelo host para enviar respostas ou comandos ao target. O target deve verificar periodicamente o valor de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fromhost&lt;/code&gt; para identificar novos comandos recebidos.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;definição-de-tohost-e-fromhost&quot;&gt;Definição de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tohost&lt;/code&gt; e &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fromhost&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;Para se comunicar com o simulador uma região da memória precisa ter o simbolo associado a estas duas localidades. Há duas formas de se fazer isso. A primeira é através do linker script:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-linker&quot;&gt;OUTPUT_ARCH(&quot;riscv&quot;)

ENTRY(_start)
EXTERN(_vectors)
SECTIONS
{

    . = 0x80000000;

    .tohost : ALIGN(0x1000)
    {
        *(.tohost)
    }

    .fromhost : ALIGN(0x1000)
    {
        *(.fromhost)
    }

    .text : ALIGN(0x1000)  {DEFINIÇÕES DA SEÇÃO .text}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;E no código em C associamos uma variável a essas seções:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tohost&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__attribute__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.tohost&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)));&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fromhost&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__attribute__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.fromhost&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Então basta escrever/ler nessas variáveis que o simulador estará monitorando.&lt;/p&gt;

&lt;p&gt;A segunda forma é através de código em assembly:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-assembly&quot;&gt;.section .text

.globl exit
# Função void exit(long) RV64
.globl exit
exit:
        slli a0, a0, 1
        ori a0, a0, 1
        la t0, tohost
        sd a0, 0(t0)
        1: j 1b

.globl putchar
putchar:
        li  t1, 0x0101000000000000
        or  a0, t1, a0
        la  t0, tohost
        sd  a0, 0(t0) # Cuidado não é sb!! sb grava bytes.
        ret

.section .tohost, &quot;aw&quot;, @progbits
.align 6
.globl tohost
tohost: .dword 0

.align 6
.globl fromhost
fromhost: .dword 0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Onde se ve as definições de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fromhost&lt;/code&gt; e &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tohost&lt;/code&gt;bem como um exemplo de aplicação definindo a função &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;void exit(long)&lt;/code&gt; e &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;void putchar(int)&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;exemplo-de-uso&quot;&gt;Exemplo de Uso&lt;/h4&gt;

&lt;p&gt;Suponha que temos um programa bare-metal que precisa realizar uma chamada de sistema para imprimir um caractere no console. O processo seria semelhante ao seguinte:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;O programa escreve um valor especial em &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tohost&lt;/code&gt;, indicando que deseja realizar uma operação de saída de caractere.&lt;/li&gt;
  &lt;li&gt;O Spike detecta a escrita em &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tohost&lt;/code&gt; e interpreta o comando.&lt;/li&gt;
  &lt;li&gt;O Spike executa a ação correspondente (por exemplo, imprime o caractere no console).&lt;/li&gt;
  &lt;li&gt;Se necessário, o Spike pode responder ao programa por meio de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fromhost&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;estrutura-do-registro-tohost&quot;&gt;Estrutura do Registro &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tohost&lt;/code&gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Bits 63:56&lt;/strong&gt;: Indicam o dispositivo. Existem dois dispositivos principais:
    &lt;ul&gt;
      &lt;li&gt;Dispositivo 0: Usado para chamadas de sistema (syscalls).&lt;/li&gt;
      &lt;li&gt;Dispositivo 1: Dispositivo de caractere bloqueante (para leitura/escrita de caracteres).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Bits 55:48&lt;/strong&gt;: Indicam o comando:
    &lt;ul&gt;
      &lt;li&gt;Comando 0: Leitura de caractere (somente dispositivo 1).&lt;/li&gt;
      &lt;li&gt;Comando 1: Escrita de caractere (somente dispositivo 1).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Bits 47:0&lt;/strong&gt;: Contêm o payload, que pode ser um ponteiro para uma estrutura de chamada de sistema ou um caractere a ser escrito.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;considerações-para-rv32&quot;&gt;Considerações para RV32&lt;/h4&gt;

&lt;p&gt;Embora &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tohost&lt;/code&gt; e &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fromhost&lt;/code&gt; tenham um formato de 64 bits, em sistemas RV32 esses registradores são acessados como duas palavras de 32 bits. Isso pode causar problemas de concorrência ao escrever valores de 64 bits em sistemas RV32, pois a escrita ocorre em duas etapas. No entanto, devido ao fato de o Spike processar blocos de instruções (geralmente em lotes de 5000), esse problema raramente se manifesta.&lt;/p&gt;

&lt;h4 id=&quot;exemplo-de-implementação-no-freertos&quot;&gt;Exemplo de Implementação no FreeRTOS&lt;/h4&gt;

&lt;p&gt;Em uma demonstração do FreeRTOS executando no Spike, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tohost&lt;/code&gt; e &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fromhost&lt;/code&gt; são utilizados para permitir que o sistema operacional emule chamadas de sistema Unix-like, possibilitando a saída de informações para o console e a interação com o host.&lt;/p&gt;

&lt;h4 id=&quot;limitações-e-alternativas&quot;&gt;Limitações e Alternativas&lt;/h4&gt;

&lt;p&gt;Embora &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tohost&lt;/code&gt; e &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fromhost&lt;/code&gt; sejam mecanismos útis, eles apresentam algumas limitações:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A falta de suporte completo para dispositivos em RV32.&lt;/li&gt;
  &lt;li&gt;O uso de “magic numbers” (valores mágicos) que não são bem documentados.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Como alternativa, recomenda-se o uso de chamadas de sistema por proxy (proxy syscalls), que oferecem uma interface mais padronizada e flexível para a comunicação entre o target e o host.&lt;/p&gt;

&lt;h4 id=&quot;conclusão&quot;&gt;Conclusão&lt;/h4&gt;

&lt;p&gt;A funcionalidade de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tohost&lt;/code&gt; e &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fromhost&lt;/code&gt; é essencial para a execução e interação de programas bare-metal e sistemas operacionais no simulador Spike. Embora seja um mecanismo eficiente, a falta de documentação adequada torna seu uso complexo para novos desenvolvedores. Alternativas como proxy syscalls podem ser mais apropriadas em aplicações modernas.&lt;/p&gt;

&lt;h3 id=&quot;referências&quot;&gt;Referências&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Código-fonte do Spike e exemplos de uso de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tohost&lt;/code&gt; e &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fromhost&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Documentação do OpenSBI e do FreeRTOS para RISC-V.&lt;/li&gt;
  &lt;li&gt;Discussões em repositórios de projetos relacionados ao ecossistema RISC-V.&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="programação" /><category term="riscv" /><summary type="html">Resumo e Explicação da Funcionalidade de tohost e fromhost no Spike e em Ambientes RISC-V</summary></entry><entry><title type="html">10 Questões de probabilidade resolvidas da Banca Quadrix - Matemática</title><link href="http://0.0.0.0:4000/educa%C3%A7%C3%A3o/2024/12/14/10-exerc%C3%ADcios-probabilidade-banca-quadrix.html" rel="alternate" type="text/html" title="10 Questões de probabilidade resolvidas da Banca Quadrix - Matemática" /><published>2024-12-14T00:00:00-06:00</published><updated>2024-12-14T00:00:00-06:00</updated><id>http://0.0.0.0:4000/educa%C3%A7%C3%A3o/2024/12/14/10-exerc%C3%ADcios-probabilidade-banca-quadrix</id><content type="html" xml:base="http://0.0.0.0:4000/educa%C3%A7%C3%A3o/2024/12/14/10-exerc%C3%ADcios-probabilidade-banca-quadrix.html">&lt;div class=&quot;destaque br bl&quot;&gt;
&lt;p&gt;&lt;strong&gt;Quadrix - 2024 - CRQ - 12ª Região (GO, TO e DF) - Agente Fiscal - 2024&lt;/strong&gt;&lt;/p&gt;Bárbara é proprietária de uma coleção de pedras preciosas, composta de 5 rubis e de 5 esmeraldas, sendo cada uma única e distintiva. Recentemente, Bárbara adquiriu um elegante porta‑joias com 10 compartimentos dispostos em fileira para exibir suas preciosidades. Bárbara, então, pretende alocar uma joia em cada espaço.
Com base nessa situação hipotética, julgue o item.&lt;br /&gt;Se Bárbara decidir alocar suas joias de forma aleatória, a probabilidade de que todos os rubis fiquem juntos é de 1 em 42.
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Certo&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Errado&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Solução&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fileiras nesta questão refere-se a compartimentos dispostos lado-a-lado em linha reta, dessa forma, se as jóias forem dispostas aleatoriamente a questão afirma a probabilidade igual a $1 \over 42$ dos rubis estarem lado-a-lado, ou seja, juntos.&lt;/p&gt;

&lt;p&gt;Primeiramente vamos calcular o número de possibilidades de disposição das jóias nos 10 compartimentos para fins didáticos. Como todas as 10 jóias são utilizadas nos 10 compartimentos e há elemento repetidos esse é um caso de &lt;strong&gt;Permutação com elementos repetidos&lt;/strong&gt;, cuja fórmula é&lt;/p&gt;

\[P_{n}^{k,j} = {n! \over k!j!}\]

&lt;p&gt;Sendo n = 10, k = 5 e j = 5, então&lt;/p&gt;

\[P_{10}^{5,5} = {10! \over 5!5!} = 252\]

&lt;p&gt;Para saber o número de possibilidades de se agrupar os 5 rubis em 10 compartimentos podemos pensar nos 5 rubis como uma unidade só como um bloco. Se considerarmos o inicio do bloco fica fácil contar as possibilidades ao colocar o bloco nos compartimentos 1,2,3,4,5 ou 6, logo são no total 6 possibilidades de disposição, logo a probabilidade dos rubis estarem juntos será&lt;/p&gt;

\[P = {6 \over 252} = {1 \over 42}\]

&lt;p&gt;A afirmação está &lt;strong&gt;Certa&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;destaque br bl&quot;&gt;
&lt;p&gt;&lt;strong&gt;Quadrix - 2012 - CREFONO-4ª Região - Fiscal - 2012&lt;/strong&gt;&lt;/p&gt;Numa urna estão 100 (cem) bolinhas numeradas de 1 a 100. Retiram-se 2 delas, sem reposição. A probabilidade de que a soma das 2 bolinhas tiradas seja 100 é de:
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;A) 1/200&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;B) 32/4501&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;C) 32/99&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;D) 49/4950&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;E) 49/99&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Solução&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Questão clássica de urnas e bolinhas numeradas. Retirar duas bolinhas sem reposição é um caso de combinação $C(100,2)$,&lt;/p&gt;

\[C(n,k) = C(100,2) = {n! \over k!(m-k)!}  = {100! \over 2!(100-2)!} = 4950\]

&lt;p&gt;Dessa forma serão 4950 possibilidades de se retirar 2 bolinhas quaisquer sem qualquer distinção.&lt;/p&gt;

&lt;p&gt;Precisamos saber então quais os casos em que dois números até 100 somam 100.
A bolinha de numero 100 com outra qualquer somam mais de 100, logo a descartamos.
A bolinha 50, se retirada, não terá outra bolinha 50 para somarem 100, logo a descartamos também.
Todas as outras bolinhas tem um par que juntas somam 100, logo os números incluidos são [1,49] e [51,99].&lt;/p&gt;

&lt;p&gt;O primeiro evento terá sucesso se uma bolinha desse intervalo for retirado logo&lt;/p&gt;

\[P_{1° Evento A} = {98 \over 100}\]

&lt;p&gt;O segundo evento terá sucesso novamente se uma bolinha que some 100 com a primeira for retirada logo&lt;/p&gt;

\[P_{2° Evento B} = {1 \over 99}\]

&lt;p&gt;O que é pedido é a probabilidade da intersecção de dois eventos sucessivos cuja fórmula é&lt;/p&gt;

\[P(A \cap B) = P(B|A) \times P(A) =  P(A|B) \times P(B)\]

&lt;p&gt;$P(B|A)$ é a probabilidade de B ocorrer dado que A já ocorreu, isso demonstra que o 1° evento é independente, porém o 2° evento é dependente do 1°. Substituindo os valores temos:&lt;/p&gt;

\[P(A \cap B) = {1 \over 99} \times {98 \over 100} = {98 \over 9900} = {49 \over 4950}\]

&lt;p&gt;&lt;strong&gt;Alternativa D.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;destaque br bl&quot;&gt;
&lt;p&gt;&lt;strong&gt;Quadrix - 2023 - CRM - MG - Estatístico - 2023&lt;/strong&gt;&lt;/p&gt; Gael possui três moedas distintas: a primeira tem duas caras; a segunda tem uma cara e uma coroa; e a terceira tem duas coroas. Uma dessas moedas foi escolhida aleatoriamente e lançada, resultando em cara.
Com base nessa situação hipotética, a probabilidade de que o outro lado dessa moeda também seja cara é de
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;A) 1/4&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;B) 1/3&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;C) 1/2&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;D) 2/3&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;E) 3/4&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Solução&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Para auxiliar é útil montar a árvore de probabilidade, como são eventos &lt;strong&gt;equiprováveis&lt;/strong&gt; as probabilidades estão expressas em cima de cada evento, veja que o evento valor da face da moeda é posterior a escolha da moeda por isso cada face tem probabilidade ${1 \over 3}\times {1\over2} = {1\over6}$.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;            1/3         1/6 (1/3 * 1/2)
                    -&amp;gt; Cara  
    -&amp;gt; Primeira Moeda M1
                    -&amp;gt; Cara
                    -&amp;gt; Cara  
    -&amp;gt; Segunda  Moeda M2
                    -&amp;gt; Coroa  
                    -&amp;gt; Coroa  
    -&amp;gt; Terceira Moeda M3
                    -&amp;gt; Coroa  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A questão pede $P(M1|\text{”Cara”})$, ou seja, a probabilidade da Primeira Moeda ocorrer dado que um &lt;strong&gt;Cara&lt;/strong&gt; aconteceu. Resolvemos a questão aplicando o Teorema de Bayes&lt;/p&gt;

\[P(M1|\text{”Cara”}) = {P(\text{”Cara”}|M1)P(M1) \over P(\text{”Cara”})}\]

&lt;p&gt;Antes precisamos calcular os valores &lt;em&gt;a priori&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;$P(M1) = {1 \over 3}$&lt;/p&gt;

&lt;p&gt;$P(\text{“Cara”})=P(\text{“Cara”}∣M1)P(M1)+P(\text{“Cara”}∣M2)P(M2)+P(\text{“Cara”}∣M3)P(M3) =$&lt;/p&gt;

&lt;p&gt;$= {1 \over 3} + {1 \over 6} + 0 = {1 \over 2}$&lt;/p&gt;

\[P(\text{”Cara”}|M1) = 1\]

&lt;p&gt;Calculando,&lt;/p&gt;

\[P(M1|\text{”Cara”}) = { 1 \times {1 \over 3} \over {1 \over 2} } = {2 \over 3}\]

&lt;p&gt;&lt;strong&gt;Alternativa D.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;destaque br bl&quot;&gt;
&lt;p&gt;&lt;strong&gt;Quadrix - 2022 - CRP - 11ª Região (CE) - Assistente Administrativo  - 2022&lt;/strong&gt;&lt;/p&gt;As irmãs Bianca e Sofia estão jogando um jogo de cartas com um baralho que possui dez cartas, no total. Conforme as regras desse jogo, deve-se tirar três cartas desse baralho, memorizá-las e devolvê-las ao baralho, embaralhando-o. Em seguida, deve-se escolher três novas cartas e anotar o número de cartas que vierem repetidas nesse grupo. Então, embaralha-se novamente o baralho, e a outra irmã repete o mesmo processo. Quem tiver mais cartas repetidas vence o jogo. Se as duas irmãs tirarem o mesmo número de cartas repetidas, o jogo termina empatado.&lt;br /&gt;Com base nessa situação hipotética, julgue o item.&lt;br /&gt;A chance de se tirar exatamente uma carta repetida é menor que 50%. 
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Certo&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Errado&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Solução&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Questão que envolve interpretar bem o texto para não se perder. O jogo é feito em 4 rodadas onde as duas primeiras a mesma pessoa retira na primeira rodada 3 cartas, memoriza e devolve as cartas ao baralho e faz outra retirada anotando as cartas repetidas.&lt;/p&gt;

&lt;p&gt;Há $C(10,3) = 120$ combinações possíveis de se retirar 3 cartas de um baralho com 10 o que dá uma probabilidade de cada jogo de $1 \over 120$, porém a questão não pergunta isso, ela pergunta qual a chance de somente UMA carta seja repetida no segundo jogo.&lt;/p&gt;

&lt;p&gt;A carta repetida pode ser qualquer uma das 3 primeiras, restando duas não repetidas que tem $C(7,2) = 21$ combinações possíveis e como são 3 cartas para cada dessas 21 combinações obtem-se, então, no total $21 \times 3 = 63$ combinações de jogos com apenas uma carta repetida.&lt;/p&gt;

&lt;p&gt;Logo a probabilidade é $P = {63 \over 120} = 52,5%$, dessa forma a afirmação está &lt;strong&gt;Errada&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;destaque br bl&quot;&gt;
&lt;p&gt;&lt;strong&gt;Quadrix - 2021 - CRESS-PB - Agente Fiscal - 2021&lt;/strong&gt;&lt;/p&gt;Em um grupo de amigos, 10 assistem a jogos de futebol, 6 assistem a jogos de tênis e 7 assistem a jogos de basquete. Há 3 amigos que assistem aos jogos de futebol e de tênis, 5 que assistem aos jogos de futebol e de basquete e 2 que assistem aos jogos de basquete e de tênis. Todos do grupo assistem a jogos de pelo menos 1 desses esportes, mas apenas 1 dos amigos acompanha todos os 3.&lt;br /&gt;&lt;br /&gt;Com base nesse caso hipotético, julgue o item.&lt;br /&gt;&lt;br /&gt;Selecionando-se um subgrupo de 3 desses amigos aleatoriamente, a probabilidade de ao menos 1 gostar de tênis é de 11/13 . 
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Certo&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Errado&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Solução&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Essa é uma ótima oportunidade para se aplicar o &lt;strong&gt;&lt;a href=&quot;https://impa.br/wp-content/uploads/2021/07/PAPMEM_Julho_2021_Cicero-Thiago_Principio-da-Inclusao-e-Exclusao.pdf&quot;&gt;princípio da inclusão-exclusão&lt;/a&gt;&lt;/strong&gt; para determinar a quantidade dos amigos:&lt;/p&gt;

&lt;p&gt;$n(A\cup B\cup C) = n(A) + n(B) + n(C) - n(A \cap B) - n(A \cap C) - n(B \cap C) + n(A \cap B \cap C)$&lt;/p&gt;

&lt;p&gt;Substituindo,&lt;/p&gt;

&lt;p&gt;$n(F\cup T\cup B) = 10 + 6 + 7 - 3 - 2 - 5 + 1 = 14$&lt;/p&gt;

&lt;p&gt;Antes é preciso resolver os conjuntos das preferências utilizando o diagrama de Venn ilustrado na figura abaixo:&lt;/p&gt;

&lt;div class=&quot;block&quot;&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;167.293&quot; height=&quot;185.79&quot; viewBox=&quot;0 0 44.263 49.157&quot; xmlns:v=&quot;https://vecta.io/nano&quot;&gt;&lt;style&gt;&lt;![CDATA[.B{writing-mode:lr-tb}.C{direction:ltr}.D{font-weight:bold}.E{font-family:Sans}.F{word-spacing:normal}.G{dominant-baseline:auto}.H{baseline-shift:baseline}.I{stroke:#000}.J{font-size:6.672px}.K{fill:#fff}.L{stroke-dashoffset:12.2477}.M{stroke-width:.265}.N{font-size:3.175px}.O{font-size:4.582px}.P{stroke-dashoffset:46.2905}.Q{stroke-width:.182}]]&gt;&lt;/style&gt;&lt;circle cx=&quot;14.402&quot; cy=&quot;17.565&quot; r=&quot;14.214&quot; fill=&quot;#faa&quot; /&gt;&lt;circle style=&quot;mix-blend-mode:multiply&quot; cx=&quot;30.049&quot; cy=&quot;18.269&quot; r=&quot;14.214&quot; fill=&quot;#cfa&quot; /&gt;&lt;circle style=&quot;mix-blend-mode:multiply&quot; cx=&quot;21.328&quot; cy=&quot;30.685&quot; r=&quot;14.214&quot; fill=&quot;#ffb380&quot; /&gt;&lt;text xml:space=&quot;preserve&quot; style=&quot;text-transform:none;white-space:normal&quot; x=&quot;53.9&quot; y=&quot;91.908&quot; letter-spacing=&quot;normal&quot; class=&quot;B C D E F G H I J K&quot;&gt;&lt;tspan style=&quot;text-transform:none;white-space:normal&quot; x=&quot;6.396&quot; y=&quot;15.959&quot; letter-spacing=&quot;normal&quot; vector-effect=&quot;none&quot; stop-color=&quot;#000&quot; stop-opacity=&quot;1&quot; class=&quot;B C F G H L M&quot;&gt;3&lt;/tspan&gt;&lt;/text&gt;&lt;text xml:space=&quot;preserve&quot; x=&quot;81.18&quot; y=&quot;92.81&quot; stroke=&quot;#1a1a1a&quot; class=&quot;B C D E J K&quot;&gt;&lt;tspan x=&quot;33.676&quot; y=&quot;16.861&quot; class=&quot;L M&quot;&gt;2&lt;/tspan&gt;&lt;/text&gt;&lt;text xml:space=&quot;preserve&quot; x=&quot;67.497&quot; y=&quot;90.828&quot; class=&quot;B C D E I J K&quot;&gt;&lt;tspan x=&quot;19.993&quot; y=&quot;14.879&quot; class=&quot;L M&quot;&gt;2&lt;/tspan&gt;&lt;/text&gt;&lt;text xml:space=&quot;preserve&quot; style=&quot;text-transform:none;white-space:normal&quot; x=&quot;66.37&quot; y=&quot;116.651&quot; letter-spacing=&quot;normal&quot; class=&quot;B C D E F G H I J K&quot;&gt;&lt;tspan style=&quot;text-transform:none;white-space:normal&quot; x=&quot;18.866&quot; y=&quot;40.702&quot; letter-spacing=&quot;normal&quot; vector-effect=&quot;none&quot; stop-color=&quot;#000&quot; stop-opacity=&quot;1&quot; class=&quot;B C F G H L M&quot;&gt;1&lt;/tspan&gt;&lt;/text&gt;&lt;text xml:space=&quot;preserve&quot; x=&quot;47.213&quot; y=&quot;78.423&quot; fill=&quot;#000&quot; class=&quot;B C D E N&quot;&gt;&lt;tspan x=&quot;-0.291&quot; y=&quot;2.474&quot;&gt;Futebol&lt;/tspan&gt;&lt;/text&gt;&lt;text xml:space=&quot;preserve&quot; x=&quot;78.824&quot; y=&quot;78.488&quot; fill=&quot;#000&quot; class=&quot;B C D E N&quot;&gt;&lt;tspan x=&quot;31.32&quot; y=&quot;2.539&quot;&gt;Tênis&lt;/tspan&gt;&lt;/text&gt;&lt;text xml:space=&quot;preserve&quot; x=&quot;61.231&quot; y=&quot;124.446&quot; fill=&quot;#000&quot; class=&quot;B C D E N&quot;&gt;&lt;tspan x=&quot;13.727&quot; y=&quot;48.497&quot;&gt;Basquete&lt;/tspan&gt;&lt;/text&gt;&lt;text xml:space=&quot;preserve&quot; style=&quot;text-transform:none;white-space:normal&quot; x=&quot;58.152&quot; y=&quot;104.784&quot; letter-spacing=&quot;normal&quot; class=&quot;B C D E F G H I J K&quot;&gt;&lt;tspan style=&quot;text-transform:none;white-space:normal&quot; x=&quot;10.648&quot; y=&quot;28.835&quot; letter-spacing=&quot;normal&quot; vector-effect=&quot;none&quot; stop-color=&quot;#000&quot; stop-opacity=&quot;1&quot; class=&quot;B C F G H L M&quot;&gt;4&lt;/tspan&gt;&lt;/text&gt;&lt;text xml:space=&quot;preserve&quot; style=&quot;text-transform:none;white-space:normal&quot; x=&quot;75.33&quot; y=&quot;106.138&quot; letter-spacing=&quot;normal&quot; class=&quot;B C D E F G H I J K&quot;&gt;&lt;tspan style=&quot;text-transform:none;white-space:normal&quot; x=&quot;27.826&quot; y=&quot;30.189&quot; letter-spacing=&quot;normal&quot; vector-effect=&quot;none&quot; stop-color=&quot;#000&quot; stop-opacity=&quot;1&quot; class=&quot;B C F G H L M&quot;&gt;1&lt;/tspan&gt;&lt;/text&gt;&lt;text xml:space=&quot;preserve&quot; style=&quot;text-transform:none;white-space:normal&quot; x=&quot;66.309&quot; y=&quot;101.448&quot; letter-spacing=&quot;normal&quot; class=&quot;B C D E F G H I J K&quot;&gt;&lt;tspan style=&quot;text-transform:none;white-space:normal&quot; x=&quot;18.805&quot; y=&quot;25.499&quot; letter-spacing=&quot;normal&quot; vector-effect=&quot;none&quot; stop-color=&quot;#000&quot; stop-opacity=&quot;1&quot; class=&quot;B C F G H L M&quot;&gt;1&lt;/tspan&gt;&lt;/text&gt;&lt;text xml:space=&quot;preserve&quot; x=&quot;58.73&quot; y=&quot;95.282&quot; fill=&quot;#fd5&quot; class=&quot;B C D E I O&quot;&gt;&lt;tspan x=&quot;11.226&quot; y=&quot;19.333&quot; class=&quot;P Q&quot;&gt;10&lt;/tspan&gt;&lt;/text&gt;&lt;text xml:space=&quot;preserve&quot; x=&quot;67.095&quot; y=&quot;108.286&quot; fill=&quot;#ffd42a&quot; class=&quot;B C D E I O&quot;&gt;&lt;tspan x=&quot;19.591&quot; y=&quot;32.337&quot; class=&quot;P Q&quot;&gt;7&lt;/tspan&gt;&lt;/text&gt;&lt;text xml:space=&quot;preserve&quot; x=&quot;75.089&quot; y=&quot;95.804&quot; fill=&quot;#fd5&quot; class=&quot;B C D E I O&quot;&gt;&lt;tspan x=&quot;27.585&quot; y=&quot;19.855&quot; class=&quot;P Q&quot;&gt;6&lt;/tspan&gt;&lt;/text&gt;&lt;/svg&gt;
&lt;/div&gt;

&lt;p&gt;Dessa forma, no total são 14 amigos. Se 3 amigos são selecionados de 14, então serão $C(14,3) = 364$ combinações diferentes.&lt;/p&gt;

&lt;p&gt;Uma forma rápida de calcular a probabilidade é descobrir a razão dos que não assistem tênis e achar então através de $1-P$ a razão desejada, dessa forma&lt;/p&gt;

\[C(8,3) = 56 \rightarrow P = 1- {56\over364} = {11\over13}\]

&lt;p&gt;Portanto a afirmação está &lt;strong&gt;Certa&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;destaque br bl&quot;&gt;
&lt;p&gt;&lt;strong&gt;Quadrix - 2022 - Câmara de Goianésia - GO - Auxiliar Administrativo Legislativo - 2022&lt;/strong&gt;&lt;/p&gt;Sendo A e B eventos independentes, se P(A) = 0,4  e  P(B) = 0,3, então  P( A ∪ B ) é igual a
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;A) 0,46&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;B) 0,52&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;C) 0,58&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;D) 0,64&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;E) 0,70&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Solução&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A união de eventos independentes é calculado pela fórmula:&lt;/p&gt;

\[P(A\cup B) = P(A) + P(B) - P(A)P(B)\]

&lt;p&gt;O enunciado diz que os eventos são independentes, basta então aplicar a fórmula e obter o valor:&lt;/p&gt;

\[P(A\cup B) = 0,4 + 0,3 - 0,4\times 0,3 = 0,58\]

&lt;p&gt;&lt;strong&gt;Alternativa C.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;destaque br bl&quot;&gt;
&lt;p&gt;&lt;strong&gt;Quadrix - 2023 - CAU-TO - Agente de Fiscalização&lt;/strong&gt;&lt;/p&gt;Anderson adotou quatro tartarugas e as batizou de Leonardo, Donatello, Michelangelo e Raphael. Para diferenciá-las, ele decidiu colocar uma faixa colorida em cada uma delas: uma faixa azul em Leonardo; uma faixa roxa em Donatello; uma faixa laranja em Michelangelo; e uma faixa vermelha em Raphael. No entanto, no dia seguinte, as faixas haviam caído e Anderson não conseguia determinar qual tartaruga correspondia a cada faixa. Ele resolveu, então, colocar as faixas novamente, mas agora não tem certeza de as ter colocado nas tartarugas corretas.
Com base nessa situação hipotética, julgue o item.&lt;br /&gt;A probabilidade de Anderson ter acertado a faixa de apenas uma tartaruga é de 1/3 . 
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Certo&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Errado&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Solução&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Como todos as faixas são usadas e a ordem importa o conjunto universo das atribuições das faixas é obtido calculando as Permutações cuja fórmula é somente o Fatorial da quantidade de elementos, ou seja, 4 faixas.&lt;/p&gt;

\[n(U) = 4! = 24\]

&lt;p&gt;então a probabilidade de acertar todas as faixas é de $P = {1 \over 24}$, porém a questão pede a probabilidade de acertar apenas uma faixa, neste caso fixando-se uma faixa correta há 4 casos como este. Essa é uma boa hora para introduzir a Permutação Caótica ou Desarranjo; método para calcular o número de permutações em que os elementos estão fora da posição original. Fixando 1 faixa é necessário saber quantas combinações não tem nenhum faixa correta.
A fórmula do desarranjo é dada por:&lt;/p&gt;

\[!n = n! \sum {(-1)^k \over k!}, \text{onde k = 0 até n}\]

&lt;p&gt;Como uma fita foi fixada, o desarranjo é calculado para as 3 fitas restantes, assim&lt;/p&gt;

\[!3 = 3! ( 1 - {1 \over 1!} + {1 \over 2!} - {1 \over 3!}) = 2\]

&lt;p&gt;Na prática alterna-se os sinais das frações com um fatorial incremental no denominador.&lt;/p&gt;

&lt;p&gt;Outra forma é fazer manualmente a contagem&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A B C D ( Todas corretas )&lt;/li&gt;
  &lt;li&gt;A B D C&lt;/li&gt;
  &lt;li&gt;A C B D&lt;/li&gt;
  &lt;li&gt;A C D B (1 Correta)&lt;/li&gt;
  &lt;li&gt;A D B C (1 Correta)&lt;/li&gt;
  &lt;li&gt;A D C B&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Logo são 2 casos de sucesso para cada fita, consequentemente serão $4 \times 2 = 8$ &lt;strong&gt;união&lt;/strong&gt; de eventos, o que resulta em&lt;/p&gt;

\[P(\text{’1 fita certa’}) = {8 \over 24} = {1 \over 3}\]

&lt;p&gt;Portanto a afirmação da questão está &lt;strong&gt;Certa.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;destaque br bl&quot;&gt;
&lt;p&gt;&lt;strong&gt;Quadrix - 2022 - SEDF - Professor de Educação Básica - Matemática - Edital nº 31&lt;/strong&gt;&lt;/p&gt;Vinícius afirmou que leva de 15 a 20 minutos para sair de sua casa e chegar à casa de Pedro, seu amigo, andando em linha reta a uma velocidade de 1 m/s. Isso fez Pedro refletir sobre a área em que a casa de Vinícius pode estar localizada. 
Com base nessa situação hipotética, julgue o item.&lt;br /&gt;Considerando-se que a probabilidade de Vinícius morar em qualquer ponto dessa área seja idêntica, então a probabilidade de ele morar a exatamente 15 minutos da casa de Pedro é igual a 3/5 da probabilidade de ele morar a exatamente 20 minutos da casa deste amigo, caso faça o percurso andando. 
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Certo&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Errado&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Solução&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Questão com um texto que pode confundir na primeira leitura.
Vinícius vai em linha reta a 1m/s a casa de Pedro. Vinícius então está entre&lt;/p&gt;

\[1_{m \over s} \times 15_{M} \times 60_{s} = 900_{m}\]

&lt;p&gt;E&lt;/p&gt;

\[1_{m \over s} \times 20_{M} \times 60_{s} = 1200_{m}\]

&lt;p&gt;ou seja, a casa de Vinícius está contida em uma linha com $1200 - 900 = 300$ metros de comprimento a partir de 900m da casa de Pedro.&lt;/p&gt;

&lt;p&gt;A questão informa que &lt;em&gt;“Considerando-se que a probabilidade de Vinícius morar em qualquer ponto dessa área seja idêntica”&lt;/em&gt; então a probabilidade da casa de Vinícius estar em qualquer ponto desses 300 metros é de ${1 \over 300}$.&lt;/p&gt;

&lt;p&gt;A afirmação &lt;em&gt;”então a probabilidade de ele morar a exatamente 15 minutos da casa de Pedro é igual a 3/5 da probabilidade de ele morar a exatamente 20 minutos da casa deste amigo…”&lt;/em&gt; está incorreta, porque a probabilidade de ele morar a exatamente 15 minutos é &lt;strong&gt;igual&lt;/strong&gt; probabilidade dele morar exatamente a 20 minutos como dito acima.&lt;/p&gt;

&lt;p&gt;Portanto a afirmação está &lt;strong&gt;Errada&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;destaque br bl&quot;&gt;
&lt;p&gt;&lt;strong&gt;Quadrix - 2022 - SEDF - Professor de Educação Básica - Matemática - Edital nº 31&lt;/strong&gt;&lt;/p&gt;Chama-se sequência de Narayana a sequência infinita dada pela seguinte fórmula de recorrência: $G_1 = G_2 = G_3 = 1, G_4 = 2 \text{ e } G_n = G_{n-1} + G_{n-3}, \forall n \in \mathbb{N} \text{ e } n \geqslant 5$ Com base nessas informações, julgue o item.&lt;br /&gt;Selecionando-se um dos dez termos iniciais da sequência de Narayana ao acaso, a probabilidade de ele ser par é de 30%.
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Certo&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Errado&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Solução&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Questões para professores costumam cobrar entendimento da notação matemática e leitura.&lt;/p&gt;

&lt;p&gt;Seguindo a notação da sequência, os 10 primeiros valores da sequência dada serão:&lt;/p&gt;

\[N_{10} = (1,1,1,2,2+1=3,3+1=4,4+2=6,6+3=9,9+4=13,13+6=19)\]

\[N_{10} = (1,1,1,2,3,4,6,9,13,19)\]

&lt;p&gt;Como se observa há 3 números pares $(2,4,6)$, logo a probabilidade de selecionar um número par da sequência será igual a $P(Par) = 3\times{1 \over 10} = 30\%$&lt;/p&gt;

&lt;p&gt;Portanto a afirmação está &lt;strong&gt;Certa&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;destaque br bl&quot;&gt;
&lt;p&gt;&lt;strong&gt;Quadrix - 2019 - CRO-GO - Fiscal Regional &lt;/strong&gt;&lt;/p&gt;Em uma pesquisa,  70% dos 200 entrevistados são mulheres. 2/5 das mulheres não sabem cozinhar e 1/3 dos homens é casado.  
Com base nessa situação hipotética, julgue o item.&lt;br /&gt;Se, entre os entrevistados, há 24 homens que sabem cozinhar, então mais de 51% dos entrevistados sabe cozinhar.
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Certo&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Errado&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Solução&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Preenchendo a tabela para treinar e auxiliar na resolução:&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Mulheres&lt;/td&gt;
      &lt;td&gt;Homens&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$200 \times {7 \over 10} = 140$&lt;br /&gt;140&lt;/td&gt;
      &lt;td&gt;$200-140 = 60$&lt;br /&gt;60&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Mulheres sabem cozinhar&lt;/td&gt;
      &lt;td&gt;Homens sabem cozinhar&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$140 - (140 \times {2 \over 5}) = 84$&lt;br /&gt;84&lt;/td&gt;
      &lt;td&gt;24&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Mulheres casadas&lt;/td&gt;
      &lt;td&gt;Homens casados&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;?&lt;/td&gt;
      &lt;td&gt;$60 \times {1 \over 3} = 20$&lt;br /&gt;20&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Dessa forma $24 + 84 = 108$ pessoas sabem cozinhar; calculando a porcentagem&lt;/p&gt;

\[{200 \over 108} - {100\% \over x\%}\]

&lt;p&gt;obtem-se 54% das pessoas na entrevista sabem cozinhar, portanto a afirmação está &lt;strong&gt;Certa&lt;/strong&gt;.&lt;/p&gt;</content><author><name></name></author><category term="educação" /><category term="matemática" /><category term="probabilidade" /><summary type="html">Quadrix - 2024 - CRQ - 12ª Região (GO, TO e DF) - Agente Fiscal - 2024Bárbara é proprietária de uma coleção de pedras preciosas, composta de 5 rubis e de 5 esmeraldas, sendo cada uma única e distintiva. Recentemente, Bárbara adquiriu um elegante porta‑joias com 10 compartimentos dispostos em fileira para exibir suas preciosidades. Bárbara, então, pretende alocar uma joia em cada espaço. Com base nessa situação hipotética, julgue o item.Se Bárbara decidir alocar suas joias de forma aleatória, a probabilidade de que todos os rubis fiquem juntos é de 1 em 42. Certo Errado</summary></entry><entry><title type="html">Padrão NEMA em motores de passo na construção de CNC e Impressoras 3D - Automação</title><link href="http://0.0.0.0:4000/automa%C3%A7%C3%A3o/2024/11/29/motores-passo-padrao-NEMA-CNC-impressao-3d.html" rel="alternate" type="text/html" title="Padrão NEMA em motores de passo na construção de CNC e Impressoras 3D - Automação" /><published>2024-11-29T00:00:00-06:00</published><updated>2024-11-29T00:00:00-06:00</updated><id>http://0.0.0.0:4000/automa%C3%A7%C3%A3o/2024/11/29/motores-passo-padrao-NEMA-CNC-impressao-3d</id><content type="html" xml:base="http://0.0.0.0:4000/automa%C3%A7%C3%A3o/2024/11/29/motores-passo-padrao-NEMA-CNC-impressao-3d.html">&lt;h2 id=&quot;entendendo-os-padrões-nema-para-motores-elétricos&quot;&gt;Entendendo os Padrões NEMA para Motores Elétricos&lt;/h2&gt;

&lt;p&gt;Os padrões da &lt;strong&gt;NEMA (National Electrical Manufacturers Association)&lt;/strong&gt; são fundamentais para especificar e avaliar motores elétricos em diversas aplicações industriais e comerciais. Este artigo apresenta um resumo desses padrões e como eles ajudam na escolha e utilização de motores elétricos.&lt;/p&gt;

&lt;h4 id=&quot;categorias-de-motores-segundo-os-padrões-nema&quot;&gt;Categorias de Motores Segundo os Padrões NEMA&lt;/h4&gt;

&lt;p&gt;Os motores NEMA são classificados em quatro classes principais, cada uma com características específicas de torque, corrente de partida e deslizamento:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Classe A&lt;/strong&gt;: Máximo de 5% de deslizamento, corrente de partida alta ou média, torque normal. Usados em ventiladores e bombas.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Classe B&lt;/strong&gt;: Similar à Classe A, mas com corrente de partida baixa. Comum em sistemas de HVAC.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Classe C&lt;/strong&gt;: Máximo de 5% de deslizamento, corrente de partida baixa e torque de rotor bloqueado elevado. Ideal para transportadores e bombas de deslocamento positivo.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Classe D&lt;/strong&gt;: Deslizamento de 5 a 13%, corrente de partida baixa, torque de rotor bloqueado muito alto. Usados em guindastes e sistemas de alta inércia.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Além disso, há os motores &lt;strong&gt;Above-NEMA&lt;/strong&gt; (ANEMA), que não seguem classificações padrão e são projetados para aplicações específicas.&lt;/p&gt;

&lt;h4 id=&quot;estruturas-e-dimensões-dos-motores-nema&quot;&gt;Estruturas e Dimensões dos Motores NEMA&lt;/h4&gt;

&lt;p&gt;Os motores são especificados por tamanhos de estrutura (frames), que definem dimensões como altura do eixo, diâmetro, e padrões de montagem. Esses tamanhos são identificados por números e sufixos, como:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;T&lt;/strong&gt;: Dimensões padronizadas.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;C&lt;/strong&gt;: Montagem frontal com flange.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;JM/JP&lt;/strong&gt;: Usados em bombas acopladas.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;TEFC&lt;/strong&gt; (Totally Enclosed Fan Cooled): Enclausurados com ventilação externa para ambientes contaminados.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;tipos-de-carcaças-e-proteções&quot;&gt;Tipos de Carcaças e Proteções&lt;/h4&gt;

&lt;p&gt;Os motores são protegidos contra contaminantes e condições ambientais por diferentes tipos de carcaça:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;ODP (Open Drip Proof)&lt;/strong&gt;: Para ambientes limpos e internos.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;WPI/WPII (Weather Protected)&lt;/strong&gt;: Protegidos contra partículas grandes e água.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;TEFC/TENV&lt;/strong&gt;: Totalmente fechados para ambientes severos.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;XPRF (Explosion-Proof)&lt;/strong&gt;: Resistentes a explosões internas.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;classes-de-isolamento-térmico&quot;&gt;Classes de Isolamento Térmico&lt;/h4&gt;

&lt;p&gt;Os padrões NEMA também classificam o isolamento térmico, que determina a capacidade de suportar calor:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Classe A&lt;/strong&gt;: Até 105°C.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Classe B&lt;/strong&gt;: Até 130°C.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Classe F&lt;/strong&gt;: Até 155°C.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Classe H&lt;/strong&gt;: Até 180°C.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A escolha da classe depende da temperatura ambiente e das condições de operação.&lt;/p&gt;

&lt;h4 id=&quot;importância-dos-padrões-nema&quot;&gt;Importância dos Padrões NEMA&lt;/h4&gt;

&lt;p&gt;Os padrões NEMA garantem que motores de diferentes fabricantes sejam intercambiáveis, com dimensões e especificações padronizadas. Isso facilita a manutenção, reposição e adaptação em projetos industriais.&lt;/p&gt;

&lt;p&gt;Além disso, o uso correto desses padrões ajuda a melhorar a eficiência energética e a confiabilidade dos sistemas motorizados.&lt;/p&gt;

&lt;h2 id=&quot;uso-em-impressão-3d-e-cnc&quot;&gt;Uso em Impressão 3D e CNC&lt;/h2&gt;

&lt;p&gt;Assim como outros motores, os motores de passo utilizados em CNC e impressoras 3D seguem os tamanhos de estrutura definidos pelos padrões NEMA. Entre os tamanhos mais comuns para aplicações em CNCs e impressoras 3D destacamos:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;NEMA 17&lt;/strong&gt;: Muito usado em impressoras 3D e pequenas máquinas CNC. Oferece um equilíbrio entre torque e tamanho compacto.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;NEMA 23&lt;/strong&gt;: Mais potente que o NEMA 17, frequentemente usado em máquinas CNC de médio porte e cortadores a laser.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;NEMA 34&lt;/strong&gt;: Usado em máquinas CNC maiores ou em aplicações que exigem alto torque.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Esses tamanhos determinam as dimensões físicas e os padrões de montagem, facilitando a integração com os sistemas mecânicos. Dessa forma ao escolher um motor de passo para esses dispositivos, é importante considerar os seguintes fatores:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Torque&lt;/strong&gt;: Essencial para mover e manter o posicionamento de cargas mecânicas, como mesas de trabalho ou eixos de impressão. O torque do motor deve ser suficiente para superar a resistência mecânica e manter a precisão.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Resolução&lt;/strong&gt;: Medida em passos por rotação. Motores de passo típicos têm 200 passos por rotação (1,8° por passo), mas podem alcançar resoluções maiores com drivers que suportam microstepping.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Drivers de Motor&lt;/strong&gt;: Os drivers controlam os pulsos enviados ao motor. Para CNCs e impressoras 3D, drivers com suporte a microstepping (como &lt;a href=&quot;https://www.allegromicro.com/~/media/Files/Datasheets/A4988-Datasheet.ashx&quot;&gt;A4988&lt;/a&gt; ou &lt;a href=&quot;https://www.analog.com/media/en/technical-documentation/data-sheets/TMC2209_datasheet_rev1.08.pdf&quot;&gt;TMC2209&lt;/a&gt;) ajudam a suavizar os movimentos e reduzir vibrações.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Corrente e Tensão&lt;/strong&gt;: Determinam a potência do motor. Certifique-se de que a fonte de alimentação e o driver sejam compatíveis com os requisitos do motor.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Backlash e Precisão&lt;/strong&gt;: Embora os motores de passo sejam precisos, o backlash em sistemas mecânicos, como fusos e correias, pode afetar a exatidão. O design mecânico deve minimizar esse efeito.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;benefícios-dos-motores-de-passo-em-cncs-e-impressoras-3d&quot;&gt;Benefícios dos Motores de Passo em CNCs e Impressoras 3D&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Controle Preciso&lt;/strong&gt;: Ideal para operações que exigem movimentos finos e repetitivos, como cortes detalhados em CNCs ou camadas de impressão em 3D.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Custo Acessível&lt;/strong&gt;: Comparados a servomotores, os motores de passo são mais baratos e suficientes para a maioria das aplicações.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Fácil Integração&lt;/strong&gt;: Interfaces padrão, como as controladoras GRBL e Marlin, simplificam a integração com drivers e software de controle.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;limitações-dos-motores-de-passo&quot;&gt;Limitações dos Motores de Passo&lt;/h4&gt;

&lt;p&gt;Apesar das vantagens, é importante considerar as limitações:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Perda de Passos&lt;/strong&gt;: Em condições de carga excessiva, o motor pode perder passos, prejudicando a precisão.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Baixa Eficiência em Alta Velocidade&lt;/strong&gt;: O torque diminui à medida que a velocidade aumenta.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Ruído e Vibração&lt;/strong&gt;: Especialmente em modos de passo inteiro. Drivers avançados ajudam a mitigar esse problema.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;dicas-para-escolha-e-configuração&quot;&gt;Dicas para Escolha e Configuração&lt;/h4&gt;

&lt;p&gt;É importante calcular o torque necessário considerando o peso da carga e a resistência do sistema para não sobrecarregar os drivers e o motor. Drivers como &lt;a href=&quot;https://www.analog.com/media/en/technical-documentation/data-sheets/TMC2209_datasheet_rev1.08.pdf&quot;&gt;TMC2209&lt;/a&gt; são ideais para impressoras 3D devido ao funcionamento silencioso, enquanto &lt;a href=&quot;https://www.ti.com/product/DRV8825&quot;&gt;DRV8825&lt;/a&gt; ou &lt;a href=&quot;https://www.omc-stepperonline.com/download/DM542T.pdf&quot;&gt;DM542&lt;/a&gt; são comuns em CNCs. Utilizar microstepping melhora a suavidade dos movimentos e a resolução. Também é importante levar em conta a temperatura de trabalho dos drivers e motores necessitando da instalação de dissipadores de calor ou ventoinhas nos drivers e motores.&lt;/p&gt;

&lt;h4 id=&quot;conclusão&quot;&gt;Conclusão&lt;/h4&gt;

&lt;p&gt;Os motores de passo, especialmente os padronizados pela NEMA, são a escolha ideal para aplicações como CNCs e impressoras 3D devido ao seu equilíbrio entre custo, precisão e confiabilidade. Escolher o modelo certo e configurá-lo corretamente é crucial para o sucesso de qualquer projeto.&lt;/p&gt;</content><author><name></name></author><category term="automação" /><category term="motores passo" /><category term="cnc" /><category term="impressão 3d" /><summary type="html">Entendendo os Padrões NEMA para Motores Elétricos</summary></entry><entry><title type="html">Explorando o método Runge-Kutta em javascript</title><link href="http://0.0.0.0:4000/aplicadas/2024/10/17/runge-kutta-em-javascript.html" rel="alternate" type="text/html" title="Explorando o método Runge-Kutta em javascript" /><published>2024-10-17T00:00:00-05:00</published><updated>2024-10-17T00:00:00-05:00</updated><id>http://0.0.0.0:4000/aplicadas/2024/10/17/runge-kutta-em-javascript</id><content type="html" xml:base="http://0.0.0.0:4000/aplicadas/2024/10/17/runge-kutta-em-javascript.html">&lt;h2 id=&quot;bricando-com-equações-diferenciais-pelo-método-rk4&quot;&gt;Bricando com equações diferenciais pelo método RK4&lt;/h2&gt;

&lt;p&gt;Equações diferenciais frequentemente surgem em modelos que estão associados a sistemas fisicos que armazenam energia, como por exemplo modelos matemáticos com molas, capacitores, pneumáticos, etc…. Entretanto encontrar a solução de uma equação diferencial não é trivial e muitas delas ainda não tem solução algébrica conhecida e por isso esses modelos matemáticos são um campo ativo de estudos. Todavia, não ter uma solução algébrica não impede de se obter seus valores, para tanto, métodos iterativos foram desenvolvidos com este fim.&lt;/p&gt;

&lt;p&gt;Antes de ver alguns desses métodos em Java Script, abaixo você poderá explorar graficamente equações diferenciais resolvidas pelo método Runge-Kutta implementado aqui.&lt;/p&gt;

&lt;p&gt;Utilize o formato javascript. O namespace Math pode ser suprimido.&lt;/p&gt;

&lt;div&gt;
&lt;div class=&quot;field is-horizontal&quot;&gt;
  &lt;div class=&quot;field-label is-normal&quot;&gt;
    &lt;label class=&quot;label&quot;&gt;Parametros&lt;/label&gt;
  &lt;/div&gt;
  &lt;div class=&quot;field-body&quot;&gt;
    &lt;div class=&quot;field&quot;&gt;
      &lt;div class=&quot;control&quot;&gt;
        &lt;input id=&quot;h&quot; class=&quot;input is-primary&quot; type=&quot;text&quot; placeholder=&quot;Valor de H&quot; value=&quot;0.0001&quot; /&gt;
        &lt;p class=&quot;help&quot;&gt;Passo para cada iteração (H)&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;field&quot;&gt;
      &lt;div class=&quot;control&quot;&gt;
        &lt;input id=&quot;t&quot; class=&quot;input is-primary&quot; type=&quot;text&quot; placeholder=&quot;Tempo&quot; value=&quot;10.0&quot; /&gt;
        &lt;p class=&quot;help&quot;&gt;Tempo limite&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
        &lt;div class=&quot;field&quot;&gt;
      &lt;div class=&quot;control&quot;&gt;
        &lt;input id=&quot;x0&quot; class=&quot;input is-primary&quot; type=&quot;text&quot; placeholder=&quot;x0&quot; value=&quot;0&quot; /&gt;
        &lt;p class=&quot;help&quot;&gt;Valor inicial de x0&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
        &lt;div class=&quot;field&quot;&gt;
      &lt;div class=&quot;control&quot;&gt;
        &lt;input id=&quot;y0&quot; class=&quot;input is-primary&quot; type=&quot;text&quot; placeholder=&quot;y0&quot; value=&quot;0&quot; /&gt;
        &lt;p class=&quot;help&quot;&gt;Valor inicial de y0&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;field has-addons&quot;&gt;
  &lt;div class=&quot;control is-expanded&quot;&gt;
    &lt;input id=&quot;eq&quot; class=&quot;input is-primary&quot; type=&quot;text&quot; placeholder=&quot;Equação formato JavaScript&quot; value=&quot;y+cos(x**2)&quot; /&gt;
  &lt;/div&gt;
  &lt;div class=&quot;control&quot;&gt;
    &lt;button id=&quot;calcular&quot; class=&quot;button is-link&quot;&gt;Calcular&lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;gd&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&quot;método-de-euler&quot;&gt;Método de Euler&lt;/h3&gt;

&lt;p&gt;O primeiro método iterativo para solução de equações diferenciais foi criado pelo famoso matemático Euler; conhecido justamente como Método de Euler. Esse método faz apenas uma estimativa pontual do próximo valor e continua o processo a partir do último estimado. Como sua estimativa é fraca, erros se acumulam a cada iteração tornando inútil os valores por explodirem ou oscilarem. Entretanto por ser simples e fácil de implementar o método de Euler costuma ser exemplo de partida para estudos desses algoritmos.&lt;/p&gt;

&lt;p&gt;Como toda equação diferencial que modela um sistema fisico esses métodos partem de uma condição inicial definida pelo usuário e a cada iteração uma estimativa do próximo valor é calculado repetindo-se o processo com o valor anterior.&lt;/p&gt;

&lt;p&gt;Como este site é primariamente de eletrônica, vamos partir do exemplo do circuito RL abaixo que foi tema de artigo &lt;sup id=&quot;fnref:anterior&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:anterior&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; para começar a explorar alguns métodos:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/imgs/circuit-rl.png&quot; alt=&quot;Circuito RL&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para uma fonte DC de 5V o circuito é modelado pela seguinte equação diferencial&lt;/p&gt;

&lt;p&gt;$5 = 4700 i{\left(t \right)} + 0.0001 \frac{d}{d t} i{\left(t \right)}$&lt;/p&gt;

&lt;p&gt;Isolando $di(t) \over {dt}$ obtemos&lt;/p&gt;

&lt;p&gt;${di(t) \over dt} = \frac{5 - 4700 * i(t)}{0.0001}$&lt;/p&gt;

&lt;p&gt;O método de Euler é um método simples e didático. Primeiramente precisamos definir a função com a equaçao diferencial que será chamada a cada iteração para se obter o próximo valor. A função &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;didt(t,i)&lt;/code&gt; definida abaixo é a equação do circuito RL visto acima.
As condições iniciais são passadas pelos parametros &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y0&lt;/code&gt; e &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x0&lt;/code&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;h&lt;/code&gt; é o passo que será dado a cada iteração, pense nisso como uma quantidade do tempo incrementado, e isso é importante, porque em um sistema rápido, digamos o circuito RL com indutância pequena, os valores acontecem rapidamente, enquanto em um modelo muito lento, como por exemplo modelos metereológicos, o tempo é da ordem de horas.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function didt(t, i) {
return (5 - 4700 * i) / 0.0001;
}

function Euler(y0, x0, h, final, f) {
const r = [];
let x = x0;
let y = y0;

r[0] = y;
while (x &amp;lt; final) {
    y = y + h * f(x, y);
    x = x + h;
    r.push(y);
}
return r;
}

r = Euler(0, 0, 0.0001, 0.1, didt);

console.log(r);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As condições iniciais do circuito no primeiro instante (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;t = 0&lt;/code&gt;) a corrente é igual a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt;, logo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y0 = 0&lt;/code&gt; e &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x0 = 0&lt;/code&gt;. Como o algoritmo é iterativo cada passo representa uma quantidade no tempo, dessa forma &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;h&lt;/code&gt; é a quantidade do passo dado no tempo. Como um circuito como esse se estabiliza rapidamente, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;h&lt;/code&gt; deverá ser da ordem dos micro segundos ou nano segundos. O parametro &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;final&lt;/code&gt; informa ao algoritmo quando terminar.
O método de Euler é puramente didático. Ele faz péssimas estimativas do próximo valor que vão se acumulando, retornando, então, valores irreais e oscilatórios. De fato no programa acima em poucas iterações os valores se tornam irreais e explosivos.&lt;/p&gt;

&lt;h3 id=&quot;método-de-runge-kutta&quot;&gt;Método de Runge-Kutta&lt;/h3&gt;

&lt;p&gt;Amplamente utilizado, o método de Runge-Kutta converge adequadamente, não acumula muitos erros e tem poucas chances de oscilar. Em contraste ao método de Euler as estimativas são feitas através de média aritmética ponderada de 4 valores (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;K_n&lt;/code&gt;).&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function didt(t, i) {
return (5 - 4700 * i) / 0.0001;
}

function RK(y0, x0, h, final, f) {
const r = [];
let x = x0;
let y = y0;
let k1, k2, k3, k4;

r.push(y);
while (x &amp;lt; final) {
    k1 = h * f(x, y);
    h2 = h / 2; // Uma pequena otimização
    k2 = h * f(x + h2, y + h2 * k1);
    k3 = h * f(x + h2, y + h2 * k2);
    k4 = h * f(x + h, y + h * k1);
    y = y + (h * (k1 + 2 * k2 + 2 * k3 + k4)) / 6;
    x = x + h;

    r.push(y);
}
return r;
}

r = RK(0, 0, 0.0001, 0.1, didt);

console.log(r);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Certamente o array pode ser descartado e os valores usados dinamicamente para plotar um gráfico ou apenas o valor final seja de interesse.&lt;/p&gt;

&lt;script&gt;
var func;
const ctx = $(&quot;mycanvas&quot;);

function RK(y0, x0, h, final, f) {
    console.log(y0,x0,h,final);
const r = [];
let x = x0;
let y = y0;
let k1, k2, k3, k4;

r.push(y);
while (x &lt; final) {
    k1 = h * f(x, y);
    h2 = h / 2; // Uma pequena otimização
    k2 = h * f(x + h2, y + h2 * k1);
    k3 = h * f(x + h2, y + h2 * k2);
    k4 = h * f(x + h, y + h * k1);
    y = y + (h * (k1 + 2 * k2 + 2 * k3 + k4)) / 6;
    x = x + h;

    r.push(y);
}
return r;
}

$(&quot;calcular&quot;).onmouseup = (e) =&gt; {
    let equacao = $(&quot;eq&quot;).value;
    try {
        with(Math) {
            equacao = equacao.replace(&apos;²&apos;,&quot;**2&quot;);
            equacao = equacao.replace(&apos;³&apos;,&quot;**3&quot;);
            equacao = equacao.replace(&apos;^&apos;,&quot;**&quot;);
            func = new Function(&quot;x,y&quot;,&quot;with(Math) { return (&quot; + equacao + &quot;);}&quot;);
            let r = RK(parseFloat($(&quot;y0&quot;).value), parseFloat($(&quot;x0&quot;).value), parseFloat($(&quot;h&quot;).value), parseFloat($(&quot;t&quot;).value), func);

            Plotly.newPlot(&quot;gd&quot;, { &quot;data&quot;: [{ &quot;y&quot;: r }], });
        }
    }
    catch(e) {
        console.log(e);
    }    
};

(function () {

})();


&lt;/script&gt;

&lt;script type=&quot;module&quot; charset=&quot;utf-8&quot;&gt;
import &quot;https://cdn.plot.ly/plotly-2.35.2.min.js&quot;
    let r = RK(0, 0, 0.0001, 10, (x,y) =&gt;{return y+Math.cos(x**2);});
    Plotly.newPlot(&quot;gd&quot;, {&quot;data&quot;: [{ &quot;y&quot;: r }],})
&lt;/script&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:anterior&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://fabiovila.github.io/eletr%C3%B4nica/2021/02/10/simulacao-circuito-RL-python.html&quot;&gt;Usando Python para resolver ODEs de circuitos elétricos: RL - Python&lt;/a&gt; &lt;a href=&quot;#fnref:anterior&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><category term="aplicadas" /><category term="matemática" /><category term="javascript" /><summary type="html">Bricando com equações diferenciais pelo método RK4</summary></entry><entry><title type="html">Significado dos códigos de falha DTC OBD2 da ECU - Aplicativo</title><link href="http://0.0.0.0:4000/app/2024/07/17/codigo-falhas-obd2-ecu.html" rel="alternate" type="text/html" title="Significado dos códigos de falha DTC OBD2 da ECU - Aplicativo" /><published>2024-07-17T00:00:00-05:00</published><updated>2024-07-17T00:00:00-05:00</updated><id>http://0.0.0.0:4000/app/2024/07/17/codigo-falhas-obd2-ecu</id><content type="html" xml:base="http://0.0.0.0:4000/app/2024/07/17/codigo-falhas-obd2-ecu.html">&lt;script&gt;
  var codigos;

function procurar(texto,initial = false) {
  if (texto.length &lt; 3 &amp;&amp; initial == false) return;
  var html = &quot;&lt;tr&gt;&lt;th&gt;Código&lt;/th&gt;&lt;th&gt;Descrição&lt;/th&gt;&lt;/tr&gt;&quot;;
  $(&apos;tresult&apos;).innerHTML = &quot;&quot;;
  for (const codigo of codigos) {
    const cdescr = codigo.cdescr || &quot;&quot;; 
    if (codigo.Code.includes(texto.toUpperCase()) || codigo.Description.includes(texto) || cdescr.includes(texto)){
      if (&quot;cdescr&quot; in codigo) {
        html += &quot;&lt;tr&gt;&lt;td class=&apos;has-text-weight-bold&apos;&gt;&quot; + codigo.Code + &quot;&lt;/td&gt;&lt;td class=&apos;has-text-weight-bold&apos;&gt;&quot; + codigo.Description + &quot;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&quot;+codigo.cdescr+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;
      } else {
        html += &quot;&lt;tr&gt;&lt;td&gt;&quot; + codigo.Code + &quot;&lt;/td&gt;&lt;td&gt;&quot; + codigo.Description + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;
      }
      
    }
  }    
  $(&apos;tresult&apos;).innerHTML = html;
}

window.addEventListener(&quot;load&quot;, function(){
   fetch(&apos;/assets/json/codigos.json&apos;)
    .then((response) =&gt; response.json())
    .then((json) =&gt; codigos = json);
});


&lt;/script&gt;

&lt;hr class=&quot;m-1&quot; /&gt;

&lt;h3 id=&quot;digite-o-código-ou-alguma-palavra-para-filtrar&quot;&gt;Digite o código ou alguma palavra para filtrar&lt;/h3&gt;
&lt;form onsubmit=&quot;return false;&quot;&gt;
&lt;div class=&quot;field&quot;&gt;
&lt;div class=&quot;control has-icons-left has-icons-right&quot;&gt;
  &lt;input class=&quot;input&quot; onkeyup=&quot;procurar(this.value)&quot; id=&quot;tx&quot; type=&quot;text&quot; placeholder=&quot;Exemplo: P0104 ou 104 ou sonda lambda&quot; /&gt;
  &lt;span class=&quot;icon is-medium is-left&quot;&gt;
    &lt;i class=&quot;fas fa-search&quot;&gt;&lt;/i&gt;
  &lt;/span&gt;
  &lt;span class=&quot;icon is-medium is-right&quot;&gt;
    &lt;i class=&quot;fas fa-check&quot;&gt;&lt;/i&gt;
  &lt;/span&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;field is-grouped&quot;&gt;
  &lt;div class=&quot;control&quot;&gt;
    &lt;button class=&quot;button is-rounded is-success&quot; onkeyup=&quot;procurar($(&apos;tx&apos;).value)&quot;&gt;Procurar&lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;/form&gt;

&lt;div class=&quot;content&quot;&gt;
&lt;table id=&quot;tresult&quot;&gt;
&lt;/table&gt; 

&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Os comentários, soluções e descrições são genéricos. Cada carro e defeito tem particularidades que as soluções descritas podem não resolver ou ainda piorar o problema. Algumas atividades de manutenção requerem conhecimento técnico prévio, ferramentas adequadas e experiência do operador. Se não sabe o que está fazendo consulte um profissional.&lt;/em&gt;&lt;/p&gt;</content><author><name></name></author><category term="app" /><category term="auto" /><category term="obd2" /><category term="ecu" /><summary type="html"></summary></entry><entry><title type="html">Cálculo de resistência pelas cores do resistor - Aplicativo</title><link href="http://0.0.0.0:4000/app/2024/01/24/calculo-resistores.html" rel="alternate" type="text/html" title="Cálculo de resistência pelas cores do resistor - Aplicativo" /><published>2024-01-24T00:00:00-06:00</published><updated>2024-01-24T00:00:00-06:00</updated><id>http://0.0.0.0:4000/app/2024/01/24/calculo-resistores</id><content type="html" xml:base="http://0.0.0.0:4000/app/2024/01/24/calculo-resistores.html">&lt;link href=&quot;/assets/css/colormenu.css&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; /&gt;

&lt;script&gt;
var valor = 220000;
var unidade = &quot;&quot;;
var faixas = [2,2,10000,20];

function formata (valor) {
    if (valor &lt; 1000) {
    unidade = &quot; Ω&quot;;
  } else if (valor &gt;= 1000 &amp;&amp; valor &lt; 1000000) {
    unidade = &quot; KΩ&quot;;
    valor = valor / 1000;
  } else if (valor &gt;= 1000000 &amp;&amp; valor &lt; 1000000000) {
    unidade = &quot; MΩ&quot;;
    valor = valor / 1000000;
  } else if (valor &gt;= 1000000000 &amp;&amp; valor &lt; 1000000000000) {
    unidade = &quot; GΩ&quot;;
    valor = valor / 1000000000;
  }
  valor = valor.toLocaleString(&apos;pt-BR&apos;, {minimumFractionDigits:0, maximumFractionDigits:2}) + unidade;
  return valor;
}

function updateValor(cor,index,v) {

  faixas[index] = v;
  valor = (faixas[0]*10+faixas[1])*faixas[2];

  if (valor &lt;= 100) { substituto = valor; } 
  if (valor &gt; 100)  { substituto = faixas[0]*100 + faixas[1]*10 + (Math.log10(Number(faixas[2])))   ; }


  console.log(cor,index,valor);
  tolerancia = faixas[3] + &quot;%&quot;;


  var alta  =  formata(valor * (1 + Number(faixas[3])/100));
  var baixa =  formata(valor * (1 - Number(faixas[3])/100));
  $(&quot;tolerancia&quot;).innerText = tolerancia  + &quot; &quot; + &quot;[ &quot; + alta + &quot;,&quot; + baixa + &quot; ]&quot;;
  valor = formata(valor);
  document.faixas[index].style.fill = cor;
  document.texto.innerHTML = valor;
  $(&quot;valor&quot;).innerText = valor;
  
}


&lt;/script&gt;

&lt;div class=&quot;section&quot;&gt;
&lt;div class=&quot;field is-grouped is-grouped-centered&quot;&gt;
  &lt;div class=&quot;control&quot;&gt;
      &lt;small&gt;1° Faixa&lt;/small&gt;
      &lt;div class=&quot;is-multiple&quot;&gt;

      &lt;label style=&quot;background-color: black; color: dark-grey;&quot; class=&quot;colorContainer&quot;&gt;Preto
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; disabled=&quot;disabled&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: brown; color: white;&quot; class=&quot;colorContainer&quot;&gt;Marrom
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;brown&apos;,0,1);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: red; color: white;&quot; class=&quot;colorContainer&quot;&gt;Vermelho
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;red&apos;,0,2);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: orange; color: white;&quot; class=&quot;colorContainer&quot;&gt;Laranja
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;orange&apos;,0,3);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: yellow; color: black;&quot; class=&quot;colorContainer&quot;&gt;Amarelo
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;yellow&apos;,0,4);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: green; color: white;&quot; class=&quot;colorContainer&quot;&gt;Verde
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;green&apos;,0,5);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;      

      &lt;label style=&quot;background-color: blue; color: white;&quot; class=&quot;colorContainer&quot;&gt;Azul
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;blue&apos;,0,6);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: violet; color: white;&quot; class=&quot;colorContainer&quot;&gt;Violeta
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;violet&apos;,0,7);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: grey; color: white;&quot; class=&quot;colorContainer&quot;&gt;Cinza
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;grey&apos;,0,8);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: white; color: black;&quot; class=&quot;colorContainer&quot;&gt;Branco
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;white&apos;,0,9);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;/div&gt;
  &lt;/div&gt;

    &lt;div class=&quot;control&quot;&gt;
    &lt;small&gt;2° Faixa&lt;/small&gt;
    &lt;div class=&quot;is-multiple&quot;&gt;
      
      &lt;label style=&quot;background-color: black; color: white;&quot; class=&quot;colorContainer&quot;&gt;Preto
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;black&apos;,1,0);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: brown; color: white;&quot; class=&quot;colorContainer&quot;&gt;Marrom
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;brown&apos;,1,1);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: red; color: white;&quot; class=&quot;colorContainer&quot;&gt;Vermelho
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;red&apos;,1,2);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: orange; color: white;&quot; class=&quot;colorContainer&quot;&gt;Laranja
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;orange&apos;,1,3);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: yellow; color: black;&quot; class=&quot;colorContainer&quot;&gt;Amarelo
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;yellow&apos;,1,4);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: green; color: white;&quot; class=&quot;colorContainer&quot;&gt;Verde
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;green&apos;,1,5);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;      

      &lt;label style=&quot;background-color: blue; color: white;&quot; class=&quot;colorContainer&quot;&gt;Azul
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;blue&apos;,1,6);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: violet; color: white;&quot; class=&quot;colorContainer&quot;&gt;Violeta
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;violet&apos;,1,7);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: grey; color: white;&quot; class=&quot;colorContainer&quot;&gt;Cinza
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;grey&apos;,1,8);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: white; color: black;&quot; class=&quot;colorContainer&quot;&gt;Branco
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;white&apos;,1,9);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

    &lt;/div&gt;
  &lt;/div&gt;

    &lt;div class=&quot;control&quot;&gt;
      &lt;small&gt;3° Faixa&lt;/small&gt;
    &lt;div class=&quot;is-multiple&quot;&gt;
    
      &lt;label style=&quot;background-color: black; color: white;&quot; class=&quot;colorContainer&quot;&gt;Preto
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;black&apos;,2,1);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: brown; color: white;&quot; class=&quot;colorContainer&quot;&gt;Marrom
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;brown&apos;,2,10);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: red; color: white;&quot; class=&quot;colorContainer&quot;&gt;Vermelho
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;red&apos;,2,100);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: orange; color: white;&quot; class=&quot;colorContainer&quot;&gt;Laranja
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;orange&apos;,2,1000);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: yellow; color: black;&quot; class=&quot;colorContainer&quot;&gt;Amarelo
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;yellow&apos;,2,10000);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: green; color: white;&quot; class=&quot;colorContainer&quot;&gt;Verde
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;green&apos;,2,100000);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;      

      &lt;label style=&quot;background-color: blue; color: white;&quot; class=&quot;colorContainer&quot;&gt;Azul
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;blue&apos;,2,1000000);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: violet; color: white;&quot; class=&quot;colorContainer&quot;&gt;Violeta
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;violet&apos;,2,10000000);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: grey; color: white;&quot; class=&quot;colorContainer&quot;&gt;Cinza
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;grey&apos;,2,100000000);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: white; color: black;&quot; class=&quot;colorContainer&quot;&gt;Branco
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;white&apos;,2,1000000000);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: gold; color: black;&quot; class=&quot;colorContainer&quot;&gt;Ouro
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;gold&apos;,2,0.1);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: silver; color: black;&quot; class=&quot;colorContainer&quot;&gt;Prata
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;silver&apos;,2,0.01);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;
    &lt;/div&gt;
  &lt;/div&gt;

    &lt;div class=&quot;control&quot;&gt;
      &lt;small&gt;4° Faixa&lt;/small&gt;
    &lt;div class=&quot;is-multiple&quot;&gt;    
      &lt;label style=&quot;background-color: black; color: white;&quot; class=&quot;colorContainer&quot;&gt;Preto
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;black&apos;,3,20);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: brown; color: white;&quot; class=&quot;colorContainer&quot;&gt;Marrom
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;brown&apos;,3,1);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: red; color: white;&quot; class=&quot;colorContainer&quot;&gt;Vermelho
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;red&apos;,3,2);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: orange; color: white;&quot; class=&quot;colorContainer&quot;&gt;Laranja
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;orange&apos;,3,3);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: yellow; color: black;&quot; class=&quot;colorContainer&quot;&gt;Amarelo
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;yellow&apos;,3,4);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: green; color: white;&quot; class=&quot;colorContainer&quot;&gt;Verde
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;green&apos;,3,0.5);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;      

      &lt;label style=&quot;background-color: blue; color: white;&quot; class=&quot;colorContainer&quot;&gt;Azul
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;blue&apos;,3,0.25);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: violet; color: white;&quot; class=&quot;colorContainer&quot;&gt;Violeta
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;violet&apos;,3,0.1);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: grey; color: white;&quot; class=&quot;colorContainer&quot;&gt;Cinza
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;grey&apos;,3,0.05);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: white; color: black;&quot; class=&quot;colorContainer&quot;&gt;Branco
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;white&apos;,3,10);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: gold; color: black;&quot; class=&quot;colorContainer&quot;&gt;Ouro
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;gold&apos;,3,5);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: silver; color: black;&quot; class=&quot;colorContainer&quot;&gt;Prata
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;silver&apos;,3,10);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;
    &lt;/div&gt;
  &lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;section&quot;&gt;
&lt;div class=&quot;subtitle has-text-centered&quot;&gt;Selecione as cores acima para obter o resultado&lt;/div&gt;
&lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;Valor&lt;/th&gt;
    &lt;th&gt;Tolerância&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td id=&quot;valor&quot; class=&quot;subtitle&quot;&gt;&lt;/td&gt;
    &lt;td id=&quot;tolerancia&quot; class=&quot;subtitle&quot;&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt; 
&lt;/div&gt;

&lt;h3 id=&quot;valores-comuns-de-resistores&quot;&gt;Valores comuns de resistores&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;330Ω&lt;/strong&gt; é um valor comum para alimentar um LED em 5V com corrente de 10mA&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;1kΩ&lt;/strong&gt; é um valor comum para alimentar um LED em 5V com corrente de aproximadamente 3mA
    &lt;ul&gt;
      &lt;li&gt;Esse valor é usado pelo Arduino em série com os LEDs&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;1k2Ω&lt;/strong&gt; é um valor comum para alimentar um LED em 12V com corrente de aproximadamente 3mA&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;10KΩ&lt;/strong&gt; é um valor comum para Pull Up e Pull Down
    &lt;ul&gt;
      &lt;li&gt;Esse valor é usado pelo Arduino como Pull Up&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;510Ω&lt;/strong&gt; é usado pela placa BluePill (STM32 a 3,3 Volts) como resistor de LEDs&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;0.18Ω&lt;/strong&gt; e &lt;strong&gt;0.01Ω&lt;/strong&gt; são valores comuns para resistores Shunt ( sensores de corrente )&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;1MΩ&lt;/strong&gt; é normalmente usado em paralelo com cristais de clock&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;valores-comerciais&quot;&gt;Valores Comerciais&lt;/h3&gt;

&lt;p&gt;O comércio não comercializa todos os valores possíveis. A indústria padronizou alguns valores que são multiplicados pela 3° Faixa, por exemplo, o valor 8.2 pode ser 8.2Ω, 82Ω, 820Ω, 8,2KΩ e assim por diante. Na tabela abaixo pode-se conferir esses valores.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Padrão&lt;/th&gt;
      &lt;th&gt;E6, E12 e E24&lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;1.1&lt;/td&gt;
      &lt;td&gt;1.2&lt;/td&gt;
      &lt;td&gt;1.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1.5&lt;/td&gt;
      &lt;td&gt;1.6&lt;/td&gt;
      &lt;td&gt;1.8&lt;/td&gt;
      &lt;td&gt;2.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2.2&lt;/td&gt;
      &lt;td&gt;2.4&lt;/td&gt;
      &lt;td&gt;2.7&lt;/td&gt;
      &lt;td&gt;3.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3.3&lt;/td&gt;
      &lt;td&gt;3.6&lt;/td&gt;
      &lt;td&gt;3.9&lt;/td&gt;
      &lt;td&gt;4.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6.8&lt;/td&gt;
      &lt;td&gt;7.5&lt;/td&gt;
      &lt;td&gt;8.2&lt;/td&gt;
      &lt;td&gt;9.1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Esses valores são para resistores de tolerância entre 5% e 20%. Para tolerâncias menores entre 1% e 0.1% a quantidade de valores comerciais é maior e neste caso uma faixa adicional é usada para indicar a maior precisão de valores.&lt;/p&gt;

&lt;script&gt;
document.obj = $(&quot;obj&quot;);
document.obj.addEventListener(&quot;load&quot;,function(){
  var svg = document.obj.contentDocument;
  document.faixas = [svg.getElementById(&quot;faixa1&quot;), svg.getElementById(&quot;faixa2&quot;), svg.getElementById(&quot;faixa3&quot;), svg.getElementById(&quot;faixa4&quot;)];
  document.texto = svg.getElementById(&quot;tspan13&quot;);
},false);
&lt;/script&gt;</content><author><name></name></author><category term="app" /><category term="eletrônica" /><category term="resistores" /><category term="código de cores" /><summary type="html"></summary></entry><entry><title type="html">Código de Cores de capacitores - Aplicativo</title><link href="http://0.0.0.0:4000/app/2024/01/23/calculo-capacitores.html" rel="alternate" type="text/html" title="Código de Cores de capacitores - Aplicativo" /><published>2024-01-23T00:00:00-06:00</published><updated>2024-01-23T00:00:00-06:00</updated><id>http://0.0.0.0:4000/app/2024/01/23/calculo-capacitores</id><content type="html" xml:base="http://0.0.0.0:4000/app/2024/01/23/calculo-capacitores.html">&lt;link href=&quot;/assets/css/colormenu.css&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; /&gt;

&lt;script&gt;
var valor = 220000;
var unidade = &quot;&quot;;
var faixas = [2,2,10000,0,0];

function formata (valor) {
    if (valor &lt; 1000) {
    unidade = &quot; pF&quot;;
  } else if (valor &gt;= 1000 &amp;&amp; valor &lt; 1000000) {
    unidade = &quot; nF&quot;;
    valor = valor / 1000;
  } else if (valor &gt;= 1000000 &amp;&amp; valor &lt; 1000000000) {
    unidade = &quot; uF&quot;;
    valor = valor / 1000000;
  } else if (valor &gt;= 1000000000 &amp;&amp; valor &lt; 1000000000000) {
    unidade = &quot; mF&quot;;
    valor = valor / 1000000000;
  }
  valor = valor.toLocaleString(&apos;pt-BR&apos;, {minimumFractionDigits:0, maximumFractionDigits:2}) + unidade;
  return valor;
}

function updateValor(cor,index,v) {

  faixas[index] = v;
  valor = (faixas[0]*10+faixas[1])*faixas[2];

  if (valor &lt;= 100) { substituto = valor; } 
  if (valor &gt; 100)  { substituto = faixas[0]*100 + faixas[1]*10 + (Math.log10(Number(faixas[2])))   ; }


  console.log(cor,index,valor);
  tolerancia = faixas[3] + &quot;%&quot;;


  var alta  =  formata(valor * (1 + Number(faixas[3])/100));
  var baixa =  formata(valor * (1 - Number(faixas[3])/100));
  $(&quot;tolerancia&quot;).innerText = tolerancia  + &quot; &quot; + &quot;[ &quot; + alta + &quot;,&quot; + baixa + &quot; ]&quot;;
  valor = formata(valor);
  document.faixas[index].style.fill = cor;
  document.texto.innerHTML = valor;
  $(&quot;valor&quot;).innerText = valor;
  $(&quot;equivalente&quot;).innerText = substituto.toLocaleString(&apos;en-US&apos;, {minimumFractionDigits:0, maximumFractionDigits:2});
  
}


&lt;/script&gt;

&lt;div class=&quot;section&quot;&gt;
&lt;div class=&quot;field is-grouped is-grouped-centered&quot;&gt;
  &lt;div class=&quot;control&quot;&gt;
      &lt;small&gt;1° Faixa&lt;/small&gt;
      &lt;div class=&quot;is-multiple&quot;&gt;

      &lt;label style=&quot;background-color: black; color: dark-grey;&quot; class=&quot;colorContainer&quot;&gt;Preto
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; disabled=&quot;disabled&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: brown; color: white;&quot; class=&quot;colorContainer&quot;&gt;Marrom
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;brown&apos;,0,1);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: red; color: white;&quot; class=&quot;colorContainer&quot;&gt;Vermelho
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;red&apos;,0,2);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: orange; color: white;&quot; class=&quot;colorContainer&quot;&gt;Laranja
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;orange&apos;,0,3);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: yellow; color: black;&quot; class=&quot;colorContainer&quot;&gt;Amarelo
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;yellow&apos;,0,4);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: green; color: white;&quot; class=&quot;colorContainer&quot;&gt;Verde
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;green&apos;,0,5);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;      

      &lt;label style=&quot;background-color: blue; color: white;&quot; class=&quot;colorContainer&quot;&gt;Azul
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;blue&apos;,0,6);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: violet; color: white;&quot; class=&quot;colorContainer&quot;&gt;Violeta
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;violet&apos;,0,7);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: grey; color: white;&quot; class=&quot;colorContainer&quot;&gt;Cinza
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;grey&apos;,0,8);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: white; color: black;&quot; class=&quot;colorContainer&quot;&gt;Branco
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;white&apos;,0,9);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;/div&gt;
  &lt;/div&gt;

    &lt;div class=&quot;control&quot;&gt;
    &lt;small&gt;2° Faixa&lt;/small&gt;
    &lt;div class=&quot;is-multiple&quot;&gt;
      
      &lt;label style=&quot;background-color: black; color: white;&quot; class=&quot;colorContainer&quot;&gt;Preto
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;black&apos;,1,0);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: brown; color: white;&quot; class=&quot;colorContainer&quot;&gt;Marrom
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;brown&apos;,1,1);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: red; color: white;&quot; class=&quot;colorContainer&quot;&gt;Vermelho
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;red&apos;,1,2);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: orange; color: white;&quot; class=&quot;colorContainer&quot;&gt;Laranja
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;orange&apos;,1,3);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: yellow; color: black;&quot; class=&quot;colorContainer&quot;&gt;Amarelo
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;yellow&apos;,1,4);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: green; color: white;&quot; class=&quot;colorContainer&quot;&gt;Verde
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;green&apos;,1,5);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;      

      &lt;label style=&quot;background-color: blue; color: white;&quot; class=&quot;colorContainer&quot;&gt;Azul
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;blue&apos;,1,6);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: violet; color: white;&quot; class=&quot;colorContainer&quot;&gt;Violeta
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;violet&apos;,1,7);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: grey; color: white;&quot; class=&quot;colorContainer&quot;&gt;Cinza
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;grey&apos;,1,8);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: white; color: black;&quot; class=&quot;colorContainer&quot;&gt;Branco
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;white&apos;,1,9);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

    &lt;/div&gt;
  &lt;/div&gt;

    &lt;div class=&quot;control&quot;&gt;
      &lt;small&gt;3° Faixa&lt;/small&gt;
    &lt;div class=&quot;is-multiple&quot;&gt;
    
      &lt;label style=&quot;background-color: black; color: white;&quot; class=&quot;colorContainer&quot;&gt;Preto
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;black&apos;,2,1);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: brown; color: white;&quot; class=&quot;colorContainer&quot;&gt;Marrom
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;brown&apos;,2,10);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: red; color: white;&quot; class=&quot;colorContainer&quot;&gt;Vermelho
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;red&apos;,2,100);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: orange; color: white;&quot; class=&quot;colorContainer&quot;&gt;Laranja
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;orange&apos;,2,1000);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: yellow; color: black;&quot; class=&quot;colorContainer&quot;&gt;Amarelo
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;yellow&apos;,2,10000);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: green; color: white;&quot; class=&quot;colorContainer&quot;&gt;Verde
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;green&apos;,2,100000);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;      

      &lt;label style=&quot;background-color: blue; color: white;&quot; class=&quot;colorContainer&quot;&gt;Azul
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;blue&apos;,2,1000000);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: violet; color: white;&quot; class=&quot;colorContainer&quot;&gt;Violeta
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;violet&apos;,2,10000000);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: grey; color: white;&quot; class=&quot;colorContainer&quot;&gt;Cinza
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;grey&apos;,2,100000000);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: white; color: black;&quot; class=&quot;colorContainer&quot;&gt;Branco
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;white&apos;,2,1000000000);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: gold; color: black;&quot; class=&quot;colorContainer&quot;&gt;Ouro
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;gold&apos;,2,0.1);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: silver; color: black;&quot; class=&quot;colorContainer&quot;&gt;Prata
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;silver&apos;,2,0.01);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;
    &lt;/div&gt;
  &lt;/div&gt;

    &lt;div class=&quot;control&quot;&gt;
      &lt;small&gt;4° Faixa&lt;/small&gt;
    &lt;div class=&quot;is-multiple&quot;&gt;    
      &lt;label style=&quot;background-color: black; color: white;&quot; class=&quot;colorContainer&quot;&gt;Preto
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;black&apos;,3,20);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: brown; color: white;&quot; class=&quot;colorContainer&quot;&gt;Marrom
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;brown&apos;,3,1);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: red; color: white;&quot; class=&quot;colorContainer&quot;&gt;Vermelho
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;red&apos;,3,2);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: orange; color: white;&quot; class=&quot;colorContainer&quot;&gt;Laranja
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;orange&apos;,3,3);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: yellow; color: black;&quot; class=&quot;colorContainer&quot;&gt;Amarelo
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;yellow&apos;,3,4);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: green; color: white;&quot; class=&quot;colorContainer&quot;&gt;Verde
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;green&apos;,3,5);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;      

      &lt;label style=&quot;background-color: blue; color: white;&quot; class=&quot;colorContainer&quot;&gt;Azul
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;blue&apos;,3,6);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: violet; color: white;&quot; class=&quot;colorContainer&quot;&gt;Violeta
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;violet&apos;,3,7);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: grey; color: white;&quot; class=&quot;colorContainer&quot;&gt;Cinza
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;grey&apos;,3,8);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: white; color: black;&quot; class=&quot;colorContainer&quot;&gt;Branco
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;white&apos;,3,10);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: gold; color: black;&quot; class=&quot;colorContainer&quot;&gt;Ouro
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;gold&apos;,3,5);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;

      &lt;label style=&quot;background-color: silver; color: black;&quot; class=&quot;colorContainer&quot;&gt;Prata
        &lt;input name=&quot;1&quot; type=&quot;radio&quot; onchange=&quot;updateValor(&apos;silver&apos;,3,10);&quot; /&gt;
        &lt;span class=&quot;colorBar&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;
    &lt;/div&gt;
  &lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;section&quot;&gt;
&lt;div class=&quot;subtitle has-text-centered&quot;&gt;Selecione as cores acima para obter o resultado&lt;/div&gt;
  &lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;Valor&lt;/th&gt;
    &lt;th&gt;Tolerância&lt;/th&gt;
    &lt;th&gt;Equivalente Atual&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td id=&quot;valor&quot; class=&quot;subtitle&quot;&gt;&lt;/td&gt;
    &lt;td id=&quot;tolerancia&quot; class=&quot;subtitle&quot;&gt;&lt;/td&gt;
    &lt;td id=&quot;equivalente&quot; class=&quot;subtitle&quot;&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt; 
&lt;/div&gt;

&lt;h3 id=&quot;substituição&quot;&gt;Substituição&lt;/h3&gt;

&lt;p&gt;Capacitores com código de cores são antigos e muito encontrados por quem restaura rádios, órgãos ou amplificadores antigos. Para substituir sugere-se os capacitores de &lt;strong&gt;poliéster&lt;/strong&gt; com a &lt;strong&gt;capacitância&lt;/strong&gt; e &lt;strong&gt;tensão indicada&lt;/strong&gt;. Em alguns casos capacitores de cerâmica podem ser usados como substitutos.&lt;/p&gt;

&lt;p&gt;O ideal é trocar todos os capacitores de equipamentos como esse. É comum encontrar alguns já estourados, rachados, descascando ou com boa aparência mas internamente já deteriorados pelo tempo.&lt;/p&gt;

&lt;script&gt;
document.obj = $(&quot;obj&quot;);
document.obj.addEventListener(&quot;load&quot;,function(){
  var svg = document.obj.contentDocument;
  document.faixas = [svg.getElementById(&quot;rect1-6&quot;), svg.getElementById(&quot;rect3&quot;), svg.getElementById(&quot;rect2&quot;), svg.getElementById(&quot;rect1-6-3&quot;)];
  document.texto = svg.getElementById(&quot;tspan1&quot;);
},false);
&lt;/script&gt;</content><author><name></name></author><category term="app" /><category term="eletrônica" /><category term="capacitores" /><category term="código de cores" /><summary type="html"></summary></entry><entry><title type="html">Órgãos Antigos dos Anos 70: Geradores e Divisores de Oitavas - Música Eletrônica</title><link href="http://0.0.0.0:4000/eletronica/2023/12/29/geradores-e-divisores-de-oitavas-org%C3%A3os-antigos.html" rel="alternate" type="text/html" title="Órgãos Antigos dos Anos 70: Geradores e Divisores de Oitavas - Música Eletrônica" /><published>2023-12-29T00:00:00-06:00</published><updated>2023-12-29T00:00:00-06:00</updated><id>http://0.0.0.0:4000/eletronica/2023/12/29/geradores-e-divisores-de-oitavas-org%C3%A3os-antigos</id><content type="html" xml:base="http://0.0.0.0:4000/eletronica/2023/12/29/geradores-e-divisores-de-oitavas-org%C3%A3os-antigos.html">&lt;h2 id=&quot;órgãos-antigos-dos-anos-70-geradores-e-divisores-de-oitavas&quot;&gt;Órgãos Antigos dos Anos 70: Geradores e Divisores de Oitavas&lt;/h2&gt;

&lt;p&gt;Os anos 70 foram uma época de efervescência musical e inovação tecnológica, e os órgãos eletrônicos desempenharam um papel crucial nesse cenário. Esses instrumentos, muitas vezes utilizados em bandas de rock progressivo, jazz fusion e música eletrônica da época, eram dotados de características sonoras únicas, inicialmente construidos com o objetivo de serem fiéis aos órgãos de tubos, sua sonoridade única e portabilidade logo achou seu lugar próprio na música.&lt;/p&gt;

&lt;h3 id=&quot;geradores-de-oitavas-a-base-do-som-único&quot;&gt;Geradores de Oitavas: A Base do Som Único&lt;/h3&gt;

&lt;p&gt;Os geradores de oitavas são circuitos eletrônicos projetados para gerar sinais de áudio em diferentes oitavas. No contexto desses instrumentos, os geradores de oitavas eram responsáveis por criar as frequências fundamentais e suas oitavas superiores e inferiores.&lt;/p&gt;

&lt;p&gt;Os órgãos antigos, como o lendário Hammond B3, utilizavam geradores de oitavas para produzir um som encorpado e cheio. A manipulação desses geradores nos &lt;strong&gt;Drawbars&lt;/strong&gt; permitia aos músicos criar timbres ricos e expressivos, tornando esses instrumentos essenciais para a música da década.&lt;/p&gt;

&lt;h3 id=&quot;divisores-de-oitavas-enfatizando-a-profundidade-sonora&quot;&gt;Divisores de Oitavas: Enfatizando a Profundidade Sonora&lt;/h3&gt;

&lt;p&gt;Em adição aos geradores de oitavas, os órgãos antigos dos anos 70 também contavam com divisores de oitavas. Esses dispositivos eram responsáveis por dividir o sinal gerado pelos osciladores em diferentes oitavas, permitindo uma abordagem mais versátil e dinâmica na criação de sons.&lt;/p&gt;

&lt;p&gt;Os divisores de oitavas eram particularmente notáveis pela forma como enriqueciam a paleta sonora dos músicos. Ao controlar a distribuição do sinal em oitavas específicas, os músicos podiam criar texturas sonoras complexas, empregando escalas e acordes de forma única. Isso proporcionava uma variedade de opções tonais, desde as profundezas ressonantes das oitavas mais baixas até as agudas e cristalinas oitavas superiores.&lt;/p&gt;

&lt;h3 id=&quot;o-par-de-chips-s50240-e-s10430&quot;&gt;O par de chips S50240 e S10430&lt;/h3&gt;

&lt;p&gt;Antes do advento de circuitos integrados especializados em geração e divisão de oitavas o processo de dividir as frequências das notas eram feitos com flip-flops discretos ou integrados. Os circuitos integrados &lt;strong&gt;S50240&lt;/strong&gt; e &lt;strong&gt;S10430&lt;/strong&gt; facilitaram a construção de órgãos eletrônicos polifônicos com o uso de apenas 2 ou três chips especializados.
O S50240 é o circuito integrado responsável por sintetizar as oitavas superiores do instrumento. Um oscilador tipicamente de 2Mhz será ligado na entrada e dividido em 12 frequências gerando 12 ondas quadradas com 50% de duty cycle correspondente a cada nota musical.
As divisões podem ser conferidas na tabela abaixo:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Divisão&lt;/th&gt;
      &lt;th&gt;Frequência resultante&lt;/th&gt;
      &lt;th&gt;Nota&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;÷478&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;4184.10 Hz&lt;/td&gt;
      &lt;td&gt;Dó inferior&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;÷451&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;4434.60 Hz&lt;/td&gt;
      &lt;td&gt;Dó sustenido&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;÷426&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;4694.80 Hz&lt;/td&gt;
      &lt;td&gt;Ré&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;÷402&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;4975.10 Hz&lt;/td&gt;
      &lt;td&gt;Ré sustenido&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;÷379&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;5277.80 Hz&lt;/td&gt;
      &lt;td&gt;Mi&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;÷358&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;5586.60 Hz&lt;/td&gt;
      &lt;td&gt;Fá&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;÷338&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;5917.20 Hz&lt;/td&gt;
      &lt;td&gt;Fá sustenido&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;÷319&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;6269.60 Hz&lt;/td&gt;
      &lt;td&gt;Sol&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;÷301&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;6644.50 Hz&lt;/td&gt;
      &lt;td&gt;Sol sustenido&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;÷284&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;7042.30 Hz&lt;/td&gt;
      &lt;td&gt;Lá&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;÷268&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;7462.70 Hz&lt;/td&gt;
      &lt;td&gt;Lá sustenido&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;÷253&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;7905.10 Hz&lt;/td&gt;
      &lt;td&gt;Si&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;÷239&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;8362.20 Hz&lt;/td&gt;
      &lt;td&gt;Dó superior&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;O S50240 sozinho nos permite apenas gerar 12 notas fundamentais. Para se obter as notas das oitavas inferiores dois S10430 são usados em conjunto com o S50240. Cada S10430 dividirá 4 notas em 4 oitavas e 2 notas em 3 oitavas totalizando por chip 22 teclas por chip e para se obter 44 teclas dois S10430 são usados em cascata. Cada divisor tem 4 saídas diferentes permitindo que com um potênciometro o músico possa misturar 4 oitavas da mesma nota nos níveis desejados alterando assim o timbre da nota. Além das 4 saídas as entradas das teclas no S10430 são sensíveis a tensão aplicada, permitindo a criação de efeitos de ataques e liberação das teclas, normalmente utilizando circuitos RC em cada tecla.&lt;/p&gt;

&lt;p&gt;O diagrama abaixo retirado do datasheet do S10430 ilustra facilmente essas ligações.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/imgs/S10430.png&quot; alt=&quot;Esquema do S50240 e S10430&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;outros-chips&quot;&gt;Outros chips&lt;/h3&gt;

&lt;p&gt;Esses chips são obsoletos e difíceis de se achar no mercado, porém não são os únicos a fazerem essa funções. Outras empresas lançaram no mercado outros chips muito conhecidos:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;13 Note Top Octave Synthetizer (TOS)&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
50% Duty Cycle&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;MO83B&lt;/li&gt;
  &lt;li&gt;M50240&lt;/li&gt;
  &lt;li&gt;M5891B1&lt;/li&gt;
  &lt;li&gt;S50240&lt;/li&gt;
  &lt;li&gt;50240&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;13 Note Top Octave Synthesizer (TOS)&lt;/strong&gt;&lt;br /&gt;
30% Duty Cycle&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;MO82B&lt;/li&gt;
  &lt;li&gt;M50241&lt;/li&gt;
  &lt;li&gt;M5891A&lt;/li&gt;
  &lt;li&gt;S50241&lt;/li&gt;
  &lt;li&gt;50241&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;destaque grad-orange&quot;&gt;
&lt;p&gt;Qual a importância do Duty Cycle?&lt;/p&gt;
&lt;small&gt;Ter um duty cycle de 30% ou 50% influencia nos harmônicos gerados pela onda quadrada. O duty cycle de 50% gera harmônicos impares que para alguns gostos é mais ácido e agudo. Enquanto usar um duty cycle de 30% gera um forte harmônico par resultando em um timbre mais leve e macio. Alguns construtores alegam que um duty cycle de 25% é o melhor valor para gerar harmônicos pares.&lt;/small&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;12 Note Top Octave Synthesizer (TOS)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;MO86B&lt;/li&gt;
  &lt;li&gt;M50242&lt;/li&gt;
  &lt;li&gt;S50242&lt;/li&gt;
  &lt;li&gt;50242&lt;/li&gt;
  &lt;li&gt;AY-1-0212&lt;/li&gt;
  &lt;li&gt;ECG-2043&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;12 Note Top Octave Synthesizer (TOS)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;MO87B&lt;/li&gt;
  &lt;li&gt;MC86B1&lt;/li&gt;
  &lt;li&gt;ECG-2043&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Opções de substituição são poucas. O técnico dependerá de peças velhas. Alguns podem fazer seu próprio TOS utilizando FPGA ou algum microcontrolador rápido o suficiente para gerar 12 ondas quadradas sem desvio de fase. É importante se atentar que a maioria dos órgãos tem Vibrato quando se varia levemente a frequência do oscilador VCO de 2MHz.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Fontes:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;http://www.armory.com&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;S50240 e S10430 Datasheets&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Wikipedia&lt;/em&gt;&lt;/p&gt;</content><author><name></name></author><category term="eletronica" /><category term="música eletrônica" /><category term="sintetizadores" /><summary type="html">Órgãos Antigos dos Anos 70: Geradores e Divisores de Oitavas</summary></entry><entry><title type="html">Criando seu próprio vocabulário BPE no Tokenizers - Python</title><link href="http://0.0.0.0:4000/aplicadas/2023/12/01/criando-seu-proprio-vocabulario-no.html" rel="alternate" type="text/html" title="Criando seu próprio vocabulário BPE no Tokenizers - Python" /><published>2023-12-01T00:00:00-06:00</published><updated>2023-12-01T00:00:00-06:00</updated><id>http://0.0.0.0:4000/aplicadas/2023/12/01/criando-seu-proprio-vocabulario-no-</id><content type="html" xml:base="http://0.0.0.0:4000/aplicadas/2023/12/01/criando-seu-proprio-vocabulario-no.html">&lt;h2 id=&quot;tokenização&quot;&gt;Tokenização&lt;/h2&gt;

&lt;p&gt;Ao longo da evolução das aplicações NLP várias formas de se representar um texto foram abordadas. Imagine a seguinte frase &lt;strong&gt;“Qual o sentido da vida?”&lt;/strong&gt; como deveríamos representa-lá para ser usada em algum Modelo de Linguagem Natural? Um modelo de linguagem ‘lê’ uma parte do texto e prevê o próximo token, então a primeira abordagem talvez seja óbvia: Atribuir um número a cada letra e usar a sequência de números para representar a frase. Boa notícia, não precisamos atribuir número algum, eles já existem na codificação UTF-8 como vemos abaixo:&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Qual o sentido da vida?&lt;/td&gt;
      &lt;td&gt;0x51 0x75 0x61 0x6c 0x20 0x6f 0x20 0x73 0x65 0x6e 0x74 0x69 0x64 0x6f 0x20 0x64 0x61 0x20 0x76 0x69 0x64 0x61 0x3f&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Porém essa representação não funciona muito bem.  Se por exemplo na entrada “Qual o sentido d” nessa codificação por letras sugerida o próximo token poderá ser o &lt;em&gt;“a”&lt;/em&gt;, &lt;em&gt;“e”&lt;/em&gt; e &lt;em&gt;“o”&lt;/em&gt; como nas frases &lt;em&gt;“Qual o sentido de …”&lt;/em&gt; e &lt;em&gt;“Qual o sentido do …”&lt;/em&gt; e porque não o &lt;em&gt;“i”&lt;/em&gt; em &lt;em&gt;“Qual o sentido disso …“&lt;/em&gt;, ou seja, a probabilidade do próximo token nessa codificação se diluí dificultando prever o próximo token. A situação piora com o espaço &lt;em&gt;” “&lt;/em&gt; ou o artigo &lt;em&gt;“a”&lt;/em&gt;, praticamente todas as letras/tokens tem a mesma probabilidade de ocorrerem depois deles.&lt;/p&gt;

&lt;p&gt;Outro problema é o contexto. As redes neurais vão perdendo o contexto ao longo das previsões e uma codificação como essa que precise de muitas iterações para formar uma frase fará a rede perder o ‘tema do assunto’.&lt;/p&gt;

&lt;p&gt;Outra forma sugerida para resolver esses problemas é atribuir um número as palavras (words) de um vocabulário como no exemplo abaixo:&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Qual o sentido da vida?&lt;/td&gt;
      &lt;td&gt;0x13 0x03 0x123 0x10 0x54&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;“Qual “&lt;/td&gt;
      &lt;td&gt;0x13&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;“o “&lt;/td&gt;
      &lt;td&gt;0x03&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;“sentido “&lt;/td&gt;
      &lt;td&gt;0x123&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;“da “&lt;/td&gt;
      &lt;td&gt;0x10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;“vida?”&lt;/td&gt;
      &lt;td&gt;0x54&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Na tabela acima cada palavra+pontuação tem um número associado. São 5 tokens então serão 5 números representando a frase toda. Nessa representação a rede neural faz poucas iterações e não se perde no contexto. De bônus ocupa pouco espaço e consome menos CPU correto? Sim. Mas alguns problemas surgem. Enquanto na representação por letras qualquer palavra do vocabulário pode ser representada, precisaríamos de uma enorme quantidade de números para representar todas as palavras existentes. Normalmente um vocabulário útil desses teria alguns Gigas de tamanho. E o que acontece se alguma palavra não conhecida aparecer? Há quem tenha usado o token &amp;lt;UNK&amp;gt; para representar uma palavra desconhecida … deselegante não?&lt;/p&gt;

&lt;h3 id=&quot;byte-pair-encoding-bpe&quot;&gt;Byte-Pair Encoding (BPE)&lt;/h3&gt;

&lt;p&gt;O BPE, usado inicialmente como um algoritmo para comprimir textos, achou seu sucesso nos modelos de linguagens localizando-se no entre-meio da representação por letras e por palavras. Na codificação BPE inicialmente todas as letras são incluídas, em seguida uma &lt;strong&gt;pesquisa&lt;/strong&gt; em uma grande quantidade de textos determinará as palavras e os RADICAIS frequentemente presentes nesses textos que serão incluídos na representação.&lt;/p&gt;

&lt;p&gt;Em português é extremamente comum o uso das preposições “do”, “da”, “em”; os artigos “um”, “uma”; os advérbios “não”, “sim”, “talvez”, em inglês é imperativo a presença do “the”, “were”, “have”, logo essas palavras são bons candidatos a serem incluídos no vocabulário.&lt;/p&gt;

&lt;p&gt;Aprendemos na escola a formação das palavras utilizando prefixos, sufixos e radicais, partindo disso, os prefixos “íssimo”,”an”, “anti”, “endo”, “hiper” bem como os sufixos “ismo”, “ença”, “ário” e tantos outros são fortes candidatos a serem representados pelo BPE. Por sorte nossa lingua tem radicais muito comuns que também podem ser incluídos na representação.&lt;/p&gt;

&lt;p&gt;Vejamos o exemplo da frase “Qual o sentido da vida?” na codificação BPE usada pelo GPT:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Token&lt;/th&gt;
      &lt;th&gt;Index&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;“Qual”&lt;/td&gt;
      &lt;td&gt;46181&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;” o”&lt;/td&gt;
      &lt;td&gt;267&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;” sent”&lt;/td&gt;
      &lt;td&gt;1908&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;“ido”&lt;/td&gt;
      &lt;td&gt;17305&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;” da”&lt;/td&gt;
      &lt;td&gt;12379&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;” v”&lt;/td&gt;
      &lt;td&gt;410&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;“ida”&lt;/td&gt;
      &lt;td&gt;3755&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;”?”&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Como se pode ver a palavra “sentido” foi quebrada em dois tokens “ sent” e “ido”, “vida” foi quebrado em “ v” e “ida”; faria mais sentido representar “vida” por “vida”? Sim, mas o vocabulário usado é do GPT-4 e apesar dele ser multilingual ele foi primariamente treinado para o inglês e com poucos textos em português, consequentemente ele tem mais radicais e palavras em inglês que em qualquer outra língua.&lt;/p&gt;

&lt;p&gt;Como todas a letras estão incluídas qualquer palavra pode ser formada e como os radicais e as palavras mais usadas estão incluídas o contexto fica pequeno. Há um balanço entre flexibilização e tamanho.&lt;/p&gt;

&lt;div class=&quot;destaque azul&quot;&gt;
&lt;p&gt;Se quiser explorar mais a tokenização usada pelo ChatGPT use o site &lt;a href=&quot;https://observablehq.com/@simonw/gpt-tokenizer&quot; target=&quot;_blank&quot;&gt;https://observablehq.com/@simonw/gpt-tokenizer&lt;/a&gt; exemplificado na imagem abaixo:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://observablehq.com/@simonw/gpt-tokenizer&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/assets/imgs/Captura de tela de 2024-01-22 17-27-40.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h3 id=&quot;treinando-seu-próprio-vocabulário&quot;&gt;Treinando seu próprio vocabulário&lt;/h3&gt;

&lt;p&gt;Para treinar seu próprio vocabulário será necessário o módulo python &lt;strong&gt;tokenizers&lt;/strong&gt;. Primeiramente instale o módulo via pip ou usando seu gerenciador de pacotes ( preferido ).&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install tokenizers
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Incluiremos os módulos necessários no cabeçalho do arquivo:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;from tokenizers import Tokenizer, models, pre_tokenizers, decoders, trainers, processors
import glob
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;O glob é excelente para essas tarefas ao facilitar adicionar novos arquivos simplesmente jogando eles em um diretório.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Initialize a tokenizer
tokenizer = Tokenizer(models.BPE())

# Customize pre-tokenization and decoding
tokenizer.pre_tokenizer = pre_tokenizers.ByteLevel(add_prefix_space=True)
tokenizer.decoder = decoders.ByteLevel()
tokenizer.post_processor = processors.ByteLevel(trim_offsets=True)

# And then train
trainer = trainers.BpeTrainer(
    vocab_size=32000,
    min_frequency=4,
    initial_alphabet=pre_tokenizers.ByteLevel.alphabet()
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Inicializamos o módulo com os parâmetros desejados. Os parâmetros mais importantes são&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;vocab_size=32000&lt;/strong&gt; - Diz qual o tamanho do vocabulário. Muito pequeno ajuda na velocidade da rede mas diminui a quantidade de palavras e radicais. O GPT usa tamanhos de 50k (~50.000) e 100k (~100.000) para seus vocabulários. Não esqueça que as letras serão incluídas, então o tamanho deve contar essas letras obrigatórias.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;min_frequency=4&lt;/strong&gt; - Frequência minima para um token ser incluído. Se alguém fizer um treinamento com diálogos de internet é muito provável que palavras digitadas erradas apareçam e outras somente uma vez, ou os famigerados kkkkkkkkkk+. É melhor deixar palavras poucos usadas de fora. Porém se o vocab_size for pequeno e a quantidade de textos grande e com muitas palavras é provável que somente palavras com muita frequência sejam incluídas.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;initial_alphabet=pre_tokenizers.ByteLevel.alphabet()&lt;/strong&gt; - Lembra das letras automaticamente incluídas? Não é automático. Elas são incluídas aqui.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Como glob será usado …&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;l = glob.glob(&quot;./**/*.txt&quot;, recursive=True)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Que fará uma lista chamada “l” com todos os aquivos *.txt no diretório e sub-diretório atual.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;specials = [
    &apos;&amp;lt;|query|&amp;gt;&apos;,
    &apos;&amp;lt;|answer|&amp;gt;&apos;,
    &apos;&amp;lt;|endoftext|&amp;gt;&apos;,
    &apos;&amp;lt;|code|&amp;gt;&apos;,
    &apos;&amp;lt;|system|&amp;gt;&apos;,
    &apos;&amp;lt;|hole|&amp;gt;&apos;
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Essa etapa é importante.&lt;/strong&gt; A OpenAI usa muito o token &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;|endoftext|&amp;gt;&lt;/code&gt; para finalizar um texto e começar outro. Também é usado durante a inferência para informar que ela terminou. O token deve ser algo estranho aos textos das linguagens que ele suporta então foi escolhido esse formato estranho &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;|endoftext|&amp;gt;&lt;/code&gt;. Porém essa palavra tem 13 caracteres e ocuparia muito espaço bem como CPU para operá-la. Não seria melhor transformar esse token em um só número como é feito nas palavras e radicais mais usados?&lt;/p&gt;

&lt;p&gt;Pois é isso que é feito nessa fase. Adiciona-se os &lt;strong&gt;specials tokens&lt;/strong&gt; ou tokens especiais que serão usados para alguma finalidade.&lt;/p&gt;

&lt;div class=&quot;destaque azul&quot;&gt;
&lt;p&gt;Eu uso o &lt;strong&gt;&amp;lt;|query|&amp;gt;&lt;/strong&gt;, &lt;strong&gt;&amp;lt;|endoftext|&amp;gt;&lt;/strong&gt; e &lt;strong&gt;&amp;lt;|answer|&amp;gt;&lt;/strong&gt; para montar datasets com perguntas e respostas como no exemplo:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;lt;|query|&amp;gt;Quem descobriu o Brasil?&amp;lt;|answer|&amp;gt;Pedro Álvares Cabral&amp;lt;|endoftext|&amp;gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;E o três tokens serão convertidos em um só número (cada) do que uma sequência de characteres.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Configurado os parâmetros agora é feito o processo de pesquisa e quando acabar o processo salvamos o *.json do vocabulário gerado para uso posterior.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tokenizer.add_special_tokens(specials)
tokenizer.train(l, trainer=trainer)

# And Save it
tokenizer.save(&quot;byte-level-bpe.tokenizer.32k.json&quot;, pretty=True)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;O arquivo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;byte-level-bpe.tokenizer.32k.json&lt;/code&gt; deverá aparecer no diretório atual ao final do processo com o vocabulário gerado.&lt;/p&gt;

&lt;h3 id=&quot;usando-o-vocabulário-gerado&quot;&gt;Usando o vocabulário gerado&lt;/h3&gt;

&lt;p&gt;Para carregar o json do vocabulário o Tokenizer tem a função &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;from_file&lt;/code&gt; e para codificar um texto qualquer no vocabulário carregado usa-se o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tokenizer.encode(texto)&lt;/code&gt; que retornará a lista &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.ids&lt;/code&gt; contendo os números dos tokens do texto convertido.
O processo inverso, ou seja, transformar uma lista de números obtidos da conversão de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tokenizer.encode(texto).ids&lt;/code&gt; em texto novamente é feito utilizando &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;decode&lt;/code&gt;.
Lembre-se:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tokenizer.encode - Transforma o texto em tokens do vocabulário carregado
tokenizer.decode - Transforma uma lista de números em texto dos tokens representados pelo vocabulário carregado.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Como se pode ver no exemplo abaixo:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import tokenizers
from tokenizers import Tokenizer
from tokenizers.models import BPE
tokenizer = Tokenizer.from_file(&quot;byte-level-bpe.tokenizer.32k.json&quot;)
encode = lambda s: tokenizer.encode(s).ids
decode = lambda l: tokenizer.decode(l)

A = encode(&quot;Qual o sentido da vida?&quot;)
B = decode(A)

print(A,B)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;programa-completo&quot;&gt;Programa completo&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;from tokenizers import Tokenizer, models, pre_tokenizers, decoders, trainers, processors
import glob
# Initialize a tokenizer
tokenizer = Tokenizer(models.BPE())

# Customize pre-tokenization and decoding
tokenizer.pre_tokenizer = pre_tokenizers.ByteLevel(add_prefix_space=True)
tokenizer.decoder = decoders.ByteLevel()
tokenizer.post_processor = processors.ByteLevel(trim_offsets=True)

# And then train
trainer = trainers.BpeTrainer(
    vocab_size=32000,
    min_frequency=4,
    initial_alphabet=pre_tokenizers.ByteLevel.alphabet()
)

l = glob.glob(&quot;./**/*.txt&quot;, recursive=True)

specials = [
    &apos;&amp;lt;|query|&amp;gt;&apos;,
    &apos;&amp;lt;|answer|&amp;gt;&apos;,
    &apos;&amp;lt;|endoftext|&amp;gt;&apos;,
    &apos;&amp;lt;|code|&amp;gt;&apos;,
    &apos;&amp;lt;|system|&amp;gt;&apos;,
    &apos;&amp;lt;|hole|&amp;gt;&apos;
]

tokenizer.add_special_tokens(specials)
tokenizer.train(l, trainer=trainer)

# And Save it
tokenizer.save(&quot;byte-level-bpe.tokenizer.32k.json&quot;, pretty=True)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="aplicadas" /><category term="python" /><category term="IA" /><category term="tokenizers" /><category term="llm" /><summary type="html">Tokenização</summary></entry></feed>